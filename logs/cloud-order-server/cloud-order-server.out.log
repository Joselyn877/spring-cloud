cloud-order-server 2023-03-08 10:35:04.015 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 5768 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:35:04.033 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:35:04.034 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:35:07.079 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:35:08.082 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:35:08.104 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:35:08.105 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:35:08.500 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:35:08.501 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 4299 ms 
cloud-order-server 2023-03-08 10:35:09.854 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:35:12.044 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 7904 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:35:12.048 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:35:12.049 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-08 10:35:13.987 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:35:14.044 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:35:14.148 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:35:14.164 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:35:14.343 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:35:14.386 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:35:14.441 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-08 10:35:14.451 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:35:14.452 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:35:14.483 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:35:14.483 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:35:14.603 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:35:14.604 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2485 ms 
cloud-order-server 2023-03-08 10:35:14.644 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:35:14.645 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:35:14.904 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:35:14.929 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:35:14.929 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:35:14.929 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:35:14.930 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:35:14.930 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:35:14.930 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:35:14.931 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:35:15.103 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:35:15.145 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:35:15.148 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:35:15.152 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:35:15.158 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678242915156 with initial instances count: 1 
cloud-order-server 2023-03-08 10:35:15.160 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:35:15.161 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678242915161, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:35:15.164 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:35:15.195 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:35:15.196 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:35:15.228 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:35:15.753 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 14.067 seconds (JVM running for 15.877) 
cloud-order-server 2023-03-08 10:35:15.764 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$521ba6a4.getRestTemplate()] 
cloud-order-server 2023-03-08 10:35:16.066 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:35:16.066 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:35:16.069 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-08 10:35:16.668 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:35:16.764 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#57ad1178:0/SimpleConnection@80fdc34 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 52714] 
cloud-order-server 2023-03-08 10:35:17.626 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:35:17.679 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:35:17.686 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:35:17.800 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:35:17.836 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:35:17.901 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:35:17.901 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:35:18.008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:35:18.009 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:35:18.200 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:35:18.215 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:35:18.216 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:35:18.216 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:35:18.216 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:35:18.216 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:35:18.216 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:35:18.217 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:35:18.366 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:35:18.369 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:35:18.372 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:35:18.377 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678242918376 with initial instances count: 1 
cloud-order-server 2023-03-08 10:35:18.379 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:35:18.379 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678242918379, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:35:18.381 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002: registering service... 
cloud-order-server 2023-03-08 10:35:18.407 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-08 10:35:18.410 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-08 10:35:18.429 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - registration status: 204 
cloud-order-server 2023-03-08 10:35:18.802 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 8.674 seconds (JVM running for 11.597) 
cloud-order-server 2023-03-08 10:35:18.810 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$fd3cd3d7.getRestTemplate()] 
cloud-order-server 2023-03-08 10:35:19.367 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:35:19.369 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:35:19.370 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:35:19.372 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-08 10:35:19.412 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#38b3f208:0/SimpleConnection@3c9aef9 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 52721] 
cloud-order-server 2023-03-08 10:35:54.631 INFO com.jojo.controller.OrderController.discoverd service:cloud-eureka-server 
cloud-order-server 2023-03-08 10:35:54.631 INFO com.jojo.controller.OrderController.discoverd service:cloud-payment-server 
cloud-order-server 2023-03-08 10:35:54.631 INFO com.jojo.controller.OrderController.discoverd service:cloud-order-server 
cloud-order-server 2023-03-08 10:40:14.945 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:40:18.226 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:41:34.606 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:41:34.606 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243294606, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:41:34.607 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002: registering service... 
cloud-order-server 2023-03-08 10:41:34.619 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - registration status: 204 
cloud-order-server 2023-03-08 10:41:34.937 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:41:37.838 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:41:37.839 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243297839, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:41:37.839 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:41:37.855 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:41:37.948 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:41:37.966 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - deregister  status: 200 
cloud-order-server 2023-03-08 10:41:37.990 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:41:38.120 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:41:41.125 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:41:41.141 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:41:41.152 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:41:44.255 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 17416 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:41:44.259 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:41:44.260 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-08 10:41:45.643 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:41:45.942 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-08 10:41:45.953 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:41:45.954 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:41:46.082 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:41:46.083 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1777 ms 
cloud-order-server 2023-03-08 10:41:46.664 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:41:47.478 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 11024 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:41:47.482 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:41:47.483 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:41:48.476 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:41:48.721 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:41:48.728 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:41:48.729 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:41:48.732 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:41:48.775 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:41:48.782 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:41:48.826 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:41:48.827 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1303 ms 
cloud-order-server 2023-03-08 10:41:48.880 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:41:48.918 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:41:48.988 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:41:48.988 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:41:49.083 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:41:49.083 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:41:49.149 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:41:49.217 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:41:49.232 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:41:49.233 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:41:49.233 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:41:49.233 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:41:49.233 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:41:49.233 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:41:49.234 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:41:49.395 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:41:49.398 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:41:49.401 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:41:49.405 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243309404 with initial instances count: 5 
cloud-order-server 2023-03-08 10:41:49.406 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:41:49.407 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243309407, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:41:49.409 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002: registering service... 
cloud-order-server 2023-03-08 10:41:49.427 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-08 10:41:49.428 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-08 10:41:49.458 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - registration status: 204 
cloud-order-server 2023-03-08 10:41:49.800 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.58 seconds (JVM running for 7.439) 
cloud-order-server 2023-03-08 10:41:49.806 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$92921f.getRestTemplate()] 
cloud-order-server 2023-03-08 10:41:50.300 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:41:50.303 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:41:50.304 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:41:50.307 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-order-server 2023-03-08 10:41:50.346 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#7d97e06c:0/SimpleConnection@440db933 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53024] 
cloud-order-server 2023-03-08 10:41:50.991 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:41:51.036 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:41:51.043 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:41:51.134 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:41:51.162 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:41:51.214 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:41:51.214 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:41:51.312 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:41:51.312 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:41:51.433 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:41:51.446 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:41:51.446 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:41:51.446 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:41:51.446 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:41:51.446 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:41:51.447 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:41:51.447 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:41:51.555 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:41:51.557 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:41:51.559 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:41:51.563 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243311562 with initial instances count: 5 
cloud-order-server 2023-03-08 10:41:51.564 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:41:51.565 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243311565, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:41:51.567 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:41:51.584 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:41:51.585 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:41:51.601 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:41:51.912 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.612 seconds (JVM running for 6.65) 
cloud-order-server 2023-03-08 10:41:51.918 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$4068c3ab.getRestTemplate()] 
cloud-order-server 2023-03-08 10:41:52.360 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:41:52.362 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:41:52.363 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:41:52.365 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-08 10:41:52.398 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#670f2466:0/SimpleConnection@c272e26 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53031] 
cloud-order-server 2023-03-08 10:42:21.132 INFO com.jojo.controller.OrderController.discoverd service:cloud-payment-server 
cloud-order-server 2023-03-08 10:42:21.136 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@2af2861b instance = InstanceInfo [instanceId = payment8002, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@f05dcd9] 
cloud-order-server 2023-03-08 10:42:21.137 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@3689271e instance = InstanceInfo [instanceId = payment8001, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8001, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@35e6033c] 
cloud-order-server 2023-03-08 10:42:21.137 INFO com.jojo.controller.OrderController.discoverd service:cloud-eureka-server 
cloud-order-server 2023-03-08 10:42:21.137 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,实例有:[EurekaServiceInstance@b9a99c5 instance = InstanceInfo [instanceId = eureka7001, appName = CLOUD-EUREKA-SERVER, hostName = eureka2, status = UP, ipAddr = 192.168.28.1, port = 7002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2ad87f7b] 
cloud-order-server 2023-03-08 10:42:21.137 INFO com.jojo.controller.OrderController.discoverd service:cloud-order-server 
cloud-order-server 2023-03-08 10:42:21.138 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,实例有:[EurekaServiceInstance@55961ce9 instance = InstanceInfo [instanceId = payment9002, appName = CLOUD-ORDER-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 9002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@506c1a84] 
cloud-order-server 2023-03-08 10:42:21.138 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,实例有:[EurekaServiceInstance@f67e5fd instance = InstanceInfo [instanceId = payment9001, appName = CLOUD-ORDER-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 9001, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@66ad70cd] 
cloud-order-server 2023-03-08 10:43:16.734 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:43:16.735 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243396735, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:43:16.735 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:43:16.750 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:43:16.972 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:43:19.982 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:43:19.998 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:43:20.009 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:43:25.222 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 2268 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:43:25.225 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:43:25.225 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:43:26.070 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:43:26.300 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:43:26.307 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:43:26.308 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:43:26.397 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:43:26.398 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1126 ms 
cloud-order-server 2023-03-08 10:43:26.729 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:43:28.411 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:43:28.456 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:43:28.463 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:43:28.557 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:43:28.587 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:43:28.647 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:43:28.648 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:43:28.760 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:43:28.760 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:43:28.884 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:43:28.895 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:43:28.896 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:43:28.896 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:43:28.896 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:43:28.896 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:43:28.896 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:43:28.897 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:43:29.011 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:43:29.013 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:43:29.015 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:43:29.019 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243409018 with initial instances count: 5 
cloud-order-server 2023-03-08 10:43:29.020 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:43:29.021 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243409021, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:43:29.023 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:43:29.044 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:43:29.045 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:43:29.072 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:43:29.374 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.009 seconds (JVM running for 5.785) 
cloud-order-server 2023-03-08 10:43:29.380 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$99f5f537.getRestTemplate()] 
cloud-order-server 2023-03-08 10:43:30.171 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:43:30.173 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:43:30.173 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:43:30.175 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-08 10:43:30.208 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#493b01ef:0/SimpleConnection@332bd4b9 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53105] 
cloud-order-server 2023-03-08 10:43:35.282 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 10:43:35.285 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@41c6598e instance = InstanceInfo [instanceId = payment8002, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@e659c4e] 
cloud-order-server 2023-03-08 10:43:35.286 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@71ad6380 instance = InstanceInfo [instanceId = payment8001, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8001, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4a7e0853] 
cloud-order-server 2023-03-08 10:43:35.286 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 10:43:35.286 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,实例有:[EurekaServiceInstance@390732bb instance = InstanceInfo [instanceId = eureka7001, appName = CLOUD-EUREKA-SERVER, hostName = eureka2, status = UP, ipAddr = 192.168.28.1, port = 7002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@1b224e39] 
cloud-order-server 2023-03-08 10:43:35.286 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 10:43:35.287 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,实例有:[EurekaServiceInstance@1099fbe instance = InstanceInfo [instanceId = payment9002, appName = CLOUD-ORDER-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 9002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@3b0f235c] 
cloud-order-server 2023-03-08 10:43:35.287 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,实例有:[EurekaServiceInstance@3b1d4c6c instance = InstanceInfo [instanceId = payment9001, appName = CLOUD-ORDER-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 9001, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@32479eb0] 
cloud-order-server 2023-03-08 10:46:49.250 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:46:53.808 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:46:53.808 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243613808, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:46:53.808 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:46:53.817 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:46:54.085 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:46:57.104 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:46:57.121 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:46:57.131 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:47:02.087 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 3572 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:47:02.089 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:47:02.090 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:47:02.913 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:47:03.141 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:47:03.148 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:47:03.149 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:47:03.236 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:47:03.236 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1110 ms 
cloud-order-server 2023-03-08 10:47:03.519 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:47:05.054 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:47:05.094 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:47:05.100 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:47:05.183 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:47:05.210 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:47:05.259 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:47:05.260 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:47:05.354 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:47:05.355 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:47:05.477 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:47:05.489 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:47:05.490 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:47:05.490 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:47:05.490 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:47:05.490 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:47:05.491 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:47:05.491 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:47:05.604 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:47:05.606 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:47:05.608 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:47:05.614 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243625612 with initial instances count: 4 
cloud-order-server 2023-03-08 10:47:05.614 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:47:05.616 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243625615, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:47:05.618 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:47:05.635 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:47:05.636 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:47:05.650 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:47:05.967 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.724 seconds (JVM running for 5.524) 
cloud-order-server 2023-03-08 10:47:05.973 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$99f5f537.getRestTemplate()] 
cloud-order-server 2023-03-08 10:47:06.445 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:47:06.447 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:47:06.447 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:47:06.448 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-08 10:47:06.478 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#493b01ef:0/SimpleConnection@50b49a8d [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53254] 
cloud-order-server 2023-03-08 10:47:12.791 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 10:47:12.794 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@2cdcfba8 instance = InstanceInfo [instanceId = payment8001, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8001, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@39f70bb2],ip:http://192.168.28.1:8001,port:8001,状态:http 
cloud-order-server 2023-03-08 10:47:12.795 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,实例有:[EurekaServiceInstance@13c0dce instance = InstanceInfo [instanceId = payment8002, appName = CLOUD-PAYMENT-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 8002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@39bef453],ip:http://192.168.28.1:8002,port:8002,状态:http 
cloud-order-server 2023-03-08 10:47:12.795 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 10:47:12.796 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,实例有:[EurekaServiceInstance@72f45977 instance = InstanceInfo [instanceId = eureka7001, appName = CLOUD-EUREKA-SERVER, hostName = eureka2, status = UP, ipAddr = 192.168.28.1, port = 7002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@735f7600],ip:http://eureka2:7002,port:7002,状态:http 
cloud-order-server 2023-03-08 10:47:12.796 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 10:47:12.797 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,实例有:[EurekaServiceInstance@12ec47d8 instance = InstanceInfo [instanceId = payment9002, appName = CLOUD-ORDER-SERVER, hostName = 192.168.28.1, status = UP, ipAddr = 192.168.28.1, port = 9002, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@5cbe35ba],ip:http://192.168.28.1:9002,port:9002,状态:http 
cloud-order-server 2023-03-08 10:48:03.007 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:48:03.008 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243683008, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:48:03.008 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:48:03.012 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:48:03.276 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:48:06.287 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-08 10:48:06.289 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:48:06.303 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:48:06.315 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:48:11.617 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 13144 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:48:11.620 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:48:11.621 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:48:12.540 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:48:12.864 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:48:12.872 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:48:12.872 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:48:12.968 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:48:12.968 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1304 ms 
cloud-order-server 2023-03-08 10:48:13.295 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:48:14.852 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:48:14.890 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:48:14.896 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:48:14.981 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:48:15.009 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:48:15.057 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:48:15.058 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:48:15.151 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:48:15.152 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:48:15.275 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:48:15.287 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:48:15.287 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:48:15.287 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:48:15.287 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:48:15.288 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:48:15.288 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:48:15.288 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:48:15.400 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:48:15.403 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:48:15.405 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:48:15.408 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243695407 with initial instances count: 5 
cloud-order-server 2023-03-08 10:48:15.410 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:48:15.410 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243695410, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:48:15.412 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:48:15.432 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:48:15.433 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:48:15.447 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:48:15.748 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.355 seconds (JVM running for 6.161) 
cloud-order-server 2023-03-08 10:48:15.754 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$99f5f537.getRestTemplate()] 
cloud-order-server 2023-03-08 10:48:16.199 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:48:16.201 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:48:16.201 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:48:16.203 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-08 10:48:16.239 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#493b01ef:0/SimpleConnection@6b7698f5 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53308] 
cloud-order-server 2023-03-08 10:48:21.873 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 10:48:21.874 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001,状态:http 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002,状态:http 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002,状态:http 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001,状态:http 
cloud-order-server 2023-03-08 10:48:21.875 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002,状态:http 
cloud-order-server 2023-03-08 10:48:52.704 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:48:52.705 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243732705, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:48:52.705 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:48:52.719 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:48:52.948 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:48:55.958 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:48:55.973 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:48:55.986 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:49:01.123 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 12144 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:49:01.127 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:49:01.127 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:49:02.184 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:49:02.452 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:49:02.460 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:49:02.460 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:49:02.549 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:49:02.549 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1387 ms 
cloud-order-server 2023-03-08 10:49:02.894 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:49:04.532 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:49:04.575 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:49:04.581 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:49:04.661 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:49:04.689 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:49:04.739 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:49:04.739 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:49:04.851 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:49:04.852 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:49:04.996 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:49:05.012 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:49:05.013 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:49:05.160 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:49:05.163 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:49:05.166 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:49:05.180 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243745179 with initial instances count: 4 
cloud-order-server 2023-03-08 10:49:05.181 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:49:05.182 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243745182, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:49:05.184 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:49:05.204 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:49:05.205 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:49:05.225 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:49:05.548 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.337 seconds (JVM running for 6.154) 
cloud-order-server 2023-03-08 10:49:05.554 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$85e5584b.getRestTemplate()] 
cloud-order-server 2023-03-08 10:49:06.038 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:49:06.039 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:49:06.040 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-08 10:49:06.428 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:49:06.459 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#79d82f66:0/SimpleConnection@474bf199 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53363] 
cloud-order-server 2023-03-08 10:49:29.762 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:49:29.763 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243769763, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:49:29.763 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:49:29.781 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:49:30.080 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:49:33.099 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:49:33.113 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:49:33.125 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:49:38.166 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 3696 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:49:38.168 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:49:38.169 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:49:39.108 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:49:39.342 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:49:39.349 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:49:39.350 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:49:39.438 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:49:39.439 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1234 ms 
cloud-order-server 2023-03-08 10:49:39.786 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:49:41.432 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:49:41.479 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:49:41.485 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:49:41.573 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:49:41.600 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:49:41.655 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:49:41.655 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:49:41.747 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:49:41.748 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:49:41.867 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:49:41.880 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:49:41.880 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:49:41.880 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:49:41.880 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:49:41.880 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:49:41.881 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:49:41.881 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:49:42.011 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:49:42.014 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:49:42.017 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:49:42.020 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243782020 with initial instances count: 5 
cloud-order-server 2023-03-08 10:49:42.021 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:49:42.022 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243782022, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:49:42.023 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:49:42.040 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:49:42.041 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:49:42.064 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:49:42.365 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.066 seconds (JVM running for 5.887) 
cloud-order-server 2023-03-08 10:49:43.308 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:49:43.309 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:49:43.310 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:49:43.311 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-08 10:49:43.339 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#493b01ef:0/SimpleConnection@4a62feff [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53395] 
cloud-order-server 2023-03-08 10:49:48.597 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 10:49:48.599 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 10:49:48.599 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 10:49:48.599 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 10:49:48.600 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 10:49:48.601 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 10:49:48.601 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 10:51:49.256 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:52:39.230 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 10:52:39.231 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243959231, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 10:52:39.231 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:52:39.245 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:52:39.493 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 10:52:42.496 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-08 10:52:42.498 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 10:52:42.512 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - deregister  status: 200 
cloud-order-server 2023-03-08 10:52:42.521 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 10:52:47.854 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 8868 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-08 10:52:47.857 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-08 10:52:47.858 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-08 10:52:48.881 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-08 10:52:49.119 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-08 10:52:49.125 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-08 10:52:49.126 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-08 10:52:49.213 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-08 10:52:49.213 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1320 ms 
cloud-order-server 2023-03-08 10:52:49.497 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-08 10:52:51.036 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-08 10:52:51.076 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-08 10:52:51.082 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-08 10:52:51.165 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-08 10:52:51.192 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-08 10:52:51.244 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:52:51.244 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-08 10:52:51.339 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-08 10:52:51.339 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-08 10:52:51.461 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:52:51.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-08 10:52:51.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-08 10:52:51.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-08 10:52:51.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-08 10:52:51.475 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-08 10:52:51.475 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-08 10:52:51.475 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-08 10:52:51.589 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-08 10:52:51.592 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-08 10:52:51.595 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-08 10:52:51.598 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678243971597 with initial instances count: 5 
cloud-order-server 2023-03-08 10:52:51.599 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-08 10:52:51.600 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678243971600, current=UP, previous=STARTING] 
cloud-order-server 2023-03-08 10:52:51.602 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 10:52:51.622 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-08 10:52:51.623 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-08 10:52:51.640 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 10:52:51.954 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.982 seconds (JVM running for 5.858) 
cloud-order-server 2023-03-08 10:52:52.663 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-08 10:52:52.665 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:52:52.666 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-08 10:52:52.668 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-08 10:52:52.698 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6c8dbf56:0/SimpleConnection@6b82a686 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53638] 
cloud-order-server 2023-03-08 10:53:01.127 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 10:53:01.129 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 10:53:01.129 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 10:53:01.129 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 10:53:01.130 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 10:53:01.130 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 10:53:01.130 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 10:53:01.130 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 10:56:49.271 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 10:57:51.482 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:01:49.284 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:02:51.491 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:06:49.287 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:07:51.505 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:11:49.301 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:12:51.517 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:16:49.313 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:17:51.521 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:21:49.326 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:22:51.522 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:26:49.339 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:27:51.525 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:31:49.352 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:32:51.527 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:36:49.364 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:37:51.531 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:41:49.377 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:42:51.545 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:46:49.383 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:47:51.557 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:48:10.363 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:48:10.364 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:48:10.364 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 11:48:10.365 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:48:10.365 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:48:10.366 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:48:10.366 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:48:10.366 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:48:48.163 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:48:48.164 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:48:48.165 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 11:48:48.165 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:48:48.165 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:48:48.165 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:48:48.165 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:48:48.166 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:49:05.411 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:49:05.412 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:49:05.412 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 11:49:05.412 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:49:05.412 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:49:05.413 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:49:05.413 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:49:05.413 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:49:35.263 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:49:35.264 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:49:35.265 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:49:35.265 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:49:35.265 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:49:35.266 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:49:35.266 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:51:24.050 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:51:24.050 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:51:24.052 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:51:24.053 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:51:24.053 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:51:24.053 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:51:24.053 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:51:32.843 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server 
cloud-order-server 2023-03-08 11:51:32.846 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8001,端口:8001 
cloud-order-server 2023-03-08 11:51:32.847 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-payment-server,请求地址:http://192.168.28.1:8002,端口:8002 
cloud-order-server 2023-03-08 11:51:32.847 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server 
cloud-order-server 2023-03-08 11:51:32.848 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-eureka-server,请求地址:http://eureka2:7002,端口:7002 
cloud-order-server 2023-03-08 11:51:32.848 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server 
cloud-order-server 2023-03-08 11:51:32.848 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9002,端口:9002 
cloud-order-server 2023-03-08 11:51:32.849 INFO com.jojo.controller.OrderController.discoverd 服务名:cloud-order-server,请求地址:http://192.168.28.1:9001,端口:9001 
cloud-order-server 2023-03-08 11:51:49.390 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:52:51.564 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:56:49.395 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 11:57:51.565 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:01:49.398 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:02:51.574 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:06:49.403 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:07:51.578 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:11:49.406 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:12:51.591 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:16:49.418 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:17:51.599 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:21:49.432 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:22:51.614 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:26:49.445 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:27:51.620 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:31:49.461 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:32:51.629 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:36:49.471 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:37:51.641 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:41:49.479 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:42:51.648 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:46:49.493 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:47:51.658 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:51:49.501 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:52:51.669 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:56:49.507 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 12:57:51.677 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:01:49.517 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:02:51.687 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:06:49.525 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:07:51.697 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:11:49.528 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:12:51.707 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:16:49.536 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:17:51.721 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:21:49.541 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:22:51.724 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:26:49.547 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:27:51.734 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:31:49.549 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:32:51.746 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:36:49.556 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:37:51.755 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:41:49.565 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:42:51.770 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:46:49.570 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:47:51.778 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:51:49.580 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:52:51.781 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:56:49.584 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 13:57:51.794 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:01:49.587 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:02:51.800 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:06:49.602 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:07:51.804 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:11:49.612 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:12:51.819 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:16:49.614 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:17:51.828 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:21:49.627 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:22:51.841 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:26:49.635 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:27:51.853 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:31:49.638 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:32:51.855 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:36:49.641 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:37:51.859 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:41:49.653 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:42:51.875 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-08 14:44:27.482 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 14:44:27.482 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678257867482, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 14:44:27.483 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001: registering service... 
cloud-order-server 2023-03-08 14:44:27.500 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - registration status: 204 
cloud-order-server 2023-03-08 14:44:27.520 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-08 14:44:27.521 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678257867521, current=DOWN, previous=UP] 
cloud-order-server 2023-03-08 14:44:27.521 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002: registering service... 
cloud-order-server 2023-03-08 14:44:27.533 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - registration status: 204 
cloud-order-server 2023-03-08 14:44:28.594 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 14:44:28.622 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-08 14:44:31.595 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 14:44:31.627 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-08 14:44:31.627 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-08 14:44:31.629 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-08 14:44:33.543 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more
 
cloud-order-server 2023-03-08 14:44:33.543 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:33.558 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more
 
cloud-order-server 2023-03-08 14:44:33.558 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:33.610 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-order-server 2023-03-08 14:44:33.611 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:33.641 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-order-server 2023-03-08 14:44:33.642 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:35.553 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more
 
cloud-order-server 2023-03-08 14:44:35.554 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:35.556 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 
cloud-order-server 2023-03-08 14:44:35.565 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more
 
cloud-order-server 2023-03-08 14:44:35.566 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:35.569 ERROR com.netflix.discovery.DiscoveryClient.renew DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - was unable to send heartbeat! 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-08 14:44:35.621 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-order-server 2023-03-08 14:44:35.622 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:35.626 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9001 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-08 14:44:35.634 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-08 14:44:35.651 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-order-server 2023-03-08 14:44:35.652 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-08 14:44:35.654 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/payment9002 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-08 14:44:35.663 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
