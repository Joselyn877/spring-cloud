cloud-order-server 2023-03-06 10:47:03.803 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 15088 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 10:47:03.811 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 10:47:03.812 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 10:47:05.975 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=08b45262-5d40-359c-9bf8-f25e6e99357c 
cloud-order-server 2023-03-06 10:47:06.407 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 10:47:06.423 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 10:47:06.423 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 10:47:06.679 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 10:47:06.680 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2777 ms 
cloud-order-server 2023-03-06 10:47:07.607 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 10:47:08.882 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 17880 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 10:47:08.884 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 10:47:08.884 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 10:47:10.112 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=08b45262-5d40-359c-9bf8-f25e6e99357c 
cloud-order-server 2023-03-06 10:47:10.372 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 10:47:10.436 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 10:47:10.445 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 10:47:10.486 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 10:47:10.496 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 10:47:10.496 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 10:47:10.575 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 10:47:10.627 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 10:47:10.680 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 10:47:10.681 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1747 ms 
cloud-order-server 2023-03-06 10:47:10.774 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 10:47:10.775 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 10:47:11.043 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 10:47:11.044 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 10:47:11.292 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 10:47:11.312 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 10:47:11.330 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 10:47:11.331 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 10:47:11.331 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 10:47:11.331 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 10:47:11.331 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 10:47:11.332 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 10:47:11.332 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 10:47:11.512 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 10:47:11.515 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 10:47:11.520 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 10:47:11.533 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678070831526 with initial instances count: 2 
cloud-order-server 2023-03-06 10:47:11.546 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 10:47:11.548 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678070831548, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 10:47:11.557 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 10:47:11.586 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 10:47:11.589 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 10:47:11.608 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 10:47:12.055 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 9.759 seconds (JVM running for 11.071) 
cloud-order-server 2023-03-06 10:47:12.223 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 10:47:12.280 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#73c3cd09:0/SimpleConnection@837d675 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54204] 
cloud-order-server 2023-03-06 10:47:12.941 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 10:47:12.943 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 10:47:12.947 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 4 ms 
cloud-order-server 2023-03-06 10:47:14.212 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 10:47:14.330 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 10:47:14.348 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 10:47:14.548 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 10:47:14.649 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 10:47:14.794 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 10:47:14.796 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 10:47:15.069 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 10:47:15.070 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 10:47:15.457 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 10:47:15.492 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 10:47:15.493 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 10:47:15.494 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 10:47:15.494 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 10:47:15.495 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 10:47:15.496 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 10:47:15.496 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 10:47:15.773 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 10:47:15.776 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 10:47:15.778 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 10:47:15.782 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678070835781 with initial instances count: 2 
cloud-order-server 2023-03-06 10:47:15.784 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 10:47:15.786 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678070835785, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 10:47:15.788 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 10:47:15.807 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 10:47:15.809 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 10:47:15.825 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 10:47:16.237 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 9.024 seconds (JVM running for 10.746) 
cloud-order-server 2023-03-06 10:47:16.607 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 10:47:16.608 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 10:47:16.609 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 10:47:17.003 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 10:47:17.036 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#75b6dd5b:0/SimpleConnection@763513ed [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54219] 
cloud-order-server 2023-03-06 10:48:21.327 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:48:21.740 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$NotFound: [404] during [GET] to [http://cloud-payment-server/payment/get?id=1] [RemoteService#orderPayment(Long)]: [{"timestamp":"2023-03-06T02:48:21.689+00:00","status":404,"error":"Not Found","path":"/payment/get"}]] with root cause 
feign.FeignException$NotFound: [404] during [GET] to [http://cloud-payment-server/payment/get?id=1] [RemoteService#orderPayment(Long)]: [{"timestamp":"2023-03-06T02:48:21.689+00:00","status":404,"error":"Not Found","path":"/payment/get"}]
	at feign.FeignException.clientErrorStatus(FeignException.java:219)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.FeignException.errorStatus(FeignException.java:185)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92)
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy94.orderPayment(Unknown Source)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 10:50:57.042 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:50:57.044 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: cloud-payment-server 
cloud-order-server 2023-03-06 10:50:57.046 WARN org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.lambda$execute$2 Service instance was not resolved, executing the original request 
cloud-order-server 2023-03-06 10:50:59.063 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: cloud-payment-server 
cloud-order-server 2023-03-06 10:50:59.064 WARN org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.lambda$execute$2 Service instance was not resolved, executing the original request 
cloud-order-server 2023-03-06 10:50:59.067 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.RetryableException: cloud-payment-server executing GET http://cloud-payment-server/payment/get?id=1] with root cause 
java.net.UnknownHostException: cloud-payment-server
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:175)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1226)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1162)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1056)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:990)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1570)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1498)
	at java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:480)
	at feign.Client$Default.convertResponse(Client.java:109)
	at feign.Client$Default.execute(Client.java:105)
	at org.springframework.cloud.openfeign.loadbalancer.LoadBalancerUtils.executeWithLoadBalancerLifecycleProcessing(LoadBalancerUtils.java:57)
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.lambda$execute$2(RetryableFeignBlockingLoadBalancerClient.java:167)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.execute(RetryableFeignBlockingLoadBalancerClient.java:113)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100)
	at com.sun.proxy.$Proxy94.orderPayment(Unknown Source)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 10:52:11.337 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 10:52:15.504 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 10:53:08.947 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:53:09.312 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 10:53:24.461 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:53:24.807 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 10:53:36.026 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:53:36.036 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 10:53:42.335 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 10:53:42.346 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 10:57:11.340 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 10:57:15.506 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:02:11.343 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:02:15.508 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:07:11.347 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:07:15.512 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:12:11.350 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:12:15.515 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:17:11.356 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:17:15.519 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:22:11.358 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:22:15.521 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:27:11.360 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:27:15.524 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:29:10.675 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:10.817 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:29:21.857 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:21.874 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:29:22.165 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:22.174 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:29:22.745 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:22.755 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:29:23.396 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:23.404 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:29:24.058 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 11:29:24.067 INFO com.jojo.controller.OrderController.orderPayment result:ComResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 11:32:11.363 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:32:15.526 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:37:11.365 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:37:15.527 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:42:11.369 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:42:15.532 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:47:11.371 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:47:15.533 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:51:41.685 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 11:51:41.685 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074701685, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 11:51:41.685 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 11:51:41.692 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 11:51:42.561 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 11:51:44.772 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 11:51:44.772 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074704772, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 11:51:44.773 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 11:51:44.778 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 11:51:45.263 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 11:51:45.564 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-06 11:51:45.565 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 11:51:45.568 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 11:51:45.577 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 11:51:48.271 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-06 11:51:48.273 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 11:51:48.297 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 11:51:48.386 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 11:51:56.803 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 18240 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 11:51:56.808 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 11:51:56.809 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 11:51:58.330 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 11:51:58.731 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 11:51:58.739 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 11:51:58.740 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 11:51:58.908 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 11:51:58.909 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2017 ms 
cloud-order-server 2023-03-06 11:51:59.531 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 11:52:00.861 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 12660 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 11:52:00.864 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 11:52:00.864 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 11:52:01.950 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 11:52:02.055 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 11:52:02.112 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 11:52:02.121 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 11:52:02.234 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 11:52:02.265 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 11:52:02.275 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 11:52:02.276 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 11:52:02.281 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 11:52:02.338 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 11:52:02.339 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 11:52:02.398 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 11:52:02.398 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1490 ms 
cloud-order-server 2023-03-06 11:52:02.443 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 11:52:02.443 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 11:52:02.619 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:52:02.635 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 11:52:02.636 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 11:52:02.636 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 11:52:02.636 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 11:52:02.636 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 11:52:02.637 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 11:52:02.637 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 11:52:02.743 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 11:52:02.795 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 11:52:02.798 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 11:52:02.802 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 11:52:02.806 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678074722805 with initial instances count: 4 
cloud-order-server 2023-03-06 11:52:02.807 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 11:52:02.808 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074722808, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 11:52:02.811 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 11:52:02.830 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 11:52:02.831 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 11:52:02.844 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 11:52:03.259 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 7.783 seconds (JVM running for 8.822) 
cloud-order-server 2023-03-06 11:52:03.546 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 11:52:03.548 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 11:52:03.549 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 11:52:03.551 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 11:52:03.590 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#2cd4e16a:0/SimpleConnection@5eeb208a [delegate=amqp://guest@192.168.28.148:5672/, localPort= 56933] 
cloud-order-server 2023-03-06 11:52:04.621 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 11:52:04.660 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 11:52:04.666 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 11:52:04.756 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 11:52:04.785 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 11:52:04.840 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 11:52:04.841 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 11:52:04.939 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 11:52:04.939 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 11:52:05.068 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:52:05.081 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 11:52:05.082 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 11:52:05.082 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 11:52:05.082 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 11:52:05.082 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 11:52:05.083 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 11:52:05.083 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 11:52:05.206 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 11:52:05.208 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 11:52:05.211 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 11:52:05.215 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678074725214 with initial instances count: 4 
cloud-order-server 2023-03-06 11:52:05.216 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 11:52:05.217 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074725217, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 11:52:05.219 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 11:52:05.239 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 11:52:05.239 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 11:52:05.252 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 11:52:05.612 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.134 seconds (JVM running for 7.527) 
cloud-order-server 2023-03-06 11:52:06.444 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 11:52:06.446 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 11:52:06.446 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 11:52:06.448 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 11:52:06.483 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#bfec2f9:0/SimpleConnection@766e7ccf [delegate=amqp://guest@192.168.28.148:5672/, localPort= 56940] 
cloud-order-server 2023-03-06 11:57:02.644 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 11:57:05.088 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:02:02.646 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:02:05.091 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:07:02.648 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:07:05.094 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:12:02.650 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:12:05.097 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:17:02.651 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:17:05.100 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:22:02.656 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:22:05.102 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:27:02.659 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:27:05.106 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:32:02.662 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:32:05.107 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:37:02.665 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:37:05.110 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:42:02.669 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:42:05.113 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:47:02.670 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:47:05.118 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:52:02.672 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:52:05.121 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:57:02.676 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 12:57:05.124 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:02:02.677 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:02:05.125 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:07:02.679 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:07:05.128 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:12:02.683 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:12:05.130 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:17:02.686 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:17:05.134 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:22:02.689 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:22:05.139 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:27:02.693 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:27:05.141 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:32:02.697 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:32:05.143 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:37:02.698 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:37:05.147 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:42:02.701 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:42:05.149 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:47:02.704 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:47:05.151 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:52:02.706 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:52:05.154 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:57:02.707 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 13:57:05.157 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:02:02.710 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:02:05.160 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:07:02.714 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:07:05.163 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:12:02.718 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:12:05.167 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:17:02.723 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:17:05.169 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:22:02.727 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:22:05.170 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:27:02.730 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:27:05.173 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:32:02.733 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:32:05.176 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:37:02.736 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:37:05.179 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:42:02.738 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:42:05.182 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:47:02.740 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:47:05.184 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:52:02.745 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:52:05.189 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:57:02.747 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 14:57:05.194 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:02:02.750 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:02:05.196 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:07:02.752 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:07:05.201 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:12:02.755 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:12:05.206 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:17:02.758 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:17:05.209 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:22:02.759 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:22:05.213 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:27:02.761 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:27:05.217 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:32:02.764 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:32:05.218 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:37:02.766 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:37:05.222 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:42:02.770 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:42:05.225 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:47:02.772 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:47:05.227 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:52:02.775 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:52:05.228 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:57:02.780 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 15:57:05.231 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:02:02.784 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:02:05.234 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:07:02.794 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:07:05.238 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:12:02.796 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:12:05.242 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:12:56.065 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:12:56.065 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090376065, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:12:56.066 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:12:56.071 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:12:56.316 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:12:59.269 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:12:59.270 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090379270, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:12:59.270 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:12:59.273 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:12:59.319 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:12:59.324 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:12:59.331 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:12:59.507 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:13:02.509 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:13:02.515 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 16:13:02.525 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:13:06.276 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 19108 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:13:06.281 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:13:06.282 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:13:07.685 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:13:08.023 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:13:08.032 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:13:08.032 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:13:08.155 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:13:08.156 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1794 ms 
cloud-order-server 2023-03-06 16:13:08.547 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:13:09.426 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 16920 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:13:09.429 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:13:09.429 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 16:13:10.401 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:13:10.565 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:13:10.610 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:13:10.616 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:13:10.687 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 16:13:10.696 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:13:10.697 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:13:10.716 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:13:10.748 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:13:10.806 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:13:10.806 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1342 ms 
cloud-order-server 2023-03-06 16:13:10.814 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:13:10.815 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:13:10.935 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:13:10.935 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:13:11.076 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:13:11.090 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:13:11.090 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:13:11.091 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:13:11.091 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:13:11.091 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:13:11.091 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:13:11.091 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:13:11.122 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:13:11.229 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:13:11.232 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:13:11.236 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:13:11.240 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090391239 with initial instances count: 5 
cloud-order-server 2023-03-06 16:13:11.242 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:13:11.243 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090391243, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:13:11.248 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:13:11.272 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:13:11.273 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:13:11.293 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:13:11.686 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.6 seconds (JVM running for 7.809) 
cloud-order-server 2023-03-06 16:13:12.407 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:13:12.410 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:13:12.410 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:13:12.413 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:13:12.449 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6ebc9573:0/SimpleConnection@33532dbf [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50022] 
cloud-order-server 2023-03-06 16:13:13.279 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:13:13.329 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:13:13.336 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:13:13.432 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:13:13.458 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:13:13.517 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:13:13.518 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:13:13.612 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:13:13.612 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:13:13.735 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:13:13.747 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:13:13.748 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:13:13.861 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:13:13.864 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:13:13.866 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:13:13.870 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090393869 with initial instances count: 5 
cloud-order-server 2023-03-06 16:13:13.871 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:13:13.871 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090393871, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:13:13.874 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:13:13.890 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 16:13:13.892 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 16:13:13.902 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:13:14.216 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.771 seconds (JVM running for 6.812) 
cloud-order-server 2023-03-06 16:13:14.513 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:13:14.513 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:13:14.515 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:13:14.882 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:13:14.909 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#1b13467c:0/SimpleConnection@16c5205a [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50030] 
cloud-order-server 2023-03-06 16:14:49.864 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:14:49.864 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090489864, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:14:49.865 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:14:49.870 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:14:50.098 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:14:53.102 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:14:53.110 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 16:14:53.121 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:14:53.249 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:14:53.250 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090493250, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:14:53.250 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:14:53.254 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:14:53.513 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:14:56.516 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:14:56.522 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:14:56.530 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:14:59.141 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21156 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:14:59.145 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:14:59.146 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 16:15:00.365 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:15:00.662 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 16:15:00.670 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:15:00.670 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:15:00.789 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:15:00.790 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1587 ms 
cloud-order-server 2023-03-06 16:15:01.221 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:15:02.083 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20488 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:15:02.086 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:15:02.086 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:15:03.056 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:15:03.240 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:15:03.285 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:15:03.293 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:15:03.318 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:15:03.325 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:15:03.326 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:15:03.389 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:15:03.419 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:15:03.426 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:15:03.426 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1305 ms 
cloud-order-server 2023-03-06 16:15:03.481 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:15:03.482 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:15:03.586 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:15:03.586 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:15:03.722 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:15:03.729 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:15:03.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:15:03.737 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:15:03.737 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:15:03.738 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:15:03.738 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:15:03.739 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:15:03.739 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:15:03.881 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:15:03.885 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:15:03.888 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:15:03.892 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090503891 with initial instances count: 4 
cloud-order-server 2023-03-06 16:15:03.893 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:15:03.894 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090503894, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:15:03.906 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:15:03.918 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 16:15:03.919 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 16:15:03.941 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:15:04.278 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.286 seconds (JVM running for 7.47) 
cloud-order-server 2023-03-06 16:15:04.830 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:15:04.832 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:15:04.833 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:15:04.834 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 16:15:04.874 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#7316523a:0/SimpleConnection@1a2d551c [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50136] 
cloud-order-server 2023-03-06 16:15:05.433 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:15:05.468 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:15:05.474 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:15:05.558 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:15:05.585 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:15:05.635 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:15:05.635 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:15:05.731 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:15:05.731 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:15:05.858 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:15:05.870 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:15:05.870 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:15:05.870 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:15:05.870 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:15:05.871 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:15:05.871 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:15:05.871 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:15:05.989 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:15:05.991 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:15:05.994 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:15:05.999 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090505998 with initial instances count: 4 
cloud-order-server 2023-03-06 16:15:06.000 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:15:06.001 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090506001, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:15:06.003 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:15:06.021 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:15:06.022 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:15:06.037 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:15:06.353 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.265 seconds (JVM running for 6.232) 
cloud-order-server 2023-03-06 16:15:06.998 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:15:06.999 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:15:07.000 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:15:07.003 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-order-server 2023-03-06 16:15:07.034 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#65fe2691:0/SimpleConnection@2d39cda3 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50143] 
cloud-order-server 2023-03-06 16:17:12.080 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:17:12.094 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:17:12.757 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:17:12.759 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:17:29.988 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:17:29.990 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:17:31.425 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:17:31.427 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:18:29.374 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:18:29.376 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:18:30.443 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 16:18:30.446 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:19:31.599 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:19:31.599 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090771599, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:19:31.600 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:19:31.606 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:19:31.832 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:19:34.835 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:19:34.838 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:19:34.846 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:19:39.406 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:19:39.411 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090779411, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:19:39.412 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:19:39.419 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:19:39.936 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:19:40.653 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 6240 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:19:40.657 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:19:40.657 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:19:41.584 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:19:41.860 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:19:41.867 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:19:41.867 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:19:41.963 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:19:41.963 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1250 ms 
cloud-order-server 2023-03-06 16:19:42.258 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:19:42.939 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:19:42.946 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 16:19:42.957 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:19:44.552 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:19:44.617 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:19:44.628 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:19:44.815 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:19:44.865 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:19:44.941 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:19:44.942 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:19:45.106 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:19:45.107 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:19:45.302 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:19:45.323 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:19:45.323 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:19:45.323 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:19:45.323 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:19:45.324 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:19:45.324 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:19:45.324 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:19:45.523 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:19:45.526 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:19:45.528 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:19:45.533 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090785531 with initial instances count: 6 
cloud-order-server 2023-03-06 16:19:45.534 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:19:45.535 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090785535, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:19:45.537 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:19:45.557 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:19:45.559 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:19:45.574 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:19:45.967 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.593 seconds (JVM running for 7.442) 
cloud-order-server 2023-03-06 16:19:46.576 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:19:46.580 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:19:46.581 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:19:46.584 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-order-server 2023-03-06 16:19:46.642 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#65fe2691:0/SimpleConnection@5ad52a49 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50331] 
cloud-order-server 2023-03-06 16:19:47.453 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 4112 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:19:47.456 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:19:47.457 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 16:19:48.376 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:19:48.619 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 16:19:48.627 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:19:48.627 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:19:48.731 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:19:48.731 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1239 ms 
cloud-order-server 2023-03-06 16:19:49.060 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:19:50.697 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:19:50.750 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:19:50.758 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:19:50.877 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:19:50.911 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:19:50.972 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:19:50.973 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:19:51.078 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:19:51.079 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:19:51.218 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:19:51.230 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:19:51.230 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:19:51.230 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:19:51.230 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:19:51.231 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:19:51.231 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:19:51.231 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:19:51.338 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:19:51.341 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:19:51.343 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:19:51.346 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090791346 with initial instances count: 6 
cloud-order-server 2023-03-06 16:19:51.348 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:19:51.348 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090791348, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:19:51.350 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:19:51.368 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 16:19:51.369 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 16:19:51.379 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:19:51.674 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.442 seconds (JVM running for 6.374) 
cloud-order-server 2023-03-06 16:19:52.235 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:19:52.237 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:19:52.238 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:19:52.239 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 16:19:52.266 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#12b5736c:0/SimpleConnection@2db55654 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50338] 
cloud-order-server 2023-03-06 16:20:03.331 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: 127.0.0.1 
cloud-order-server 2023-03-06 16:20:03.345 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:437)
	at com.jojo.controller.OrderController.create(OrderController.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 16:20:23.446 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:20:23.447 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090823447, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:20:23.447 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:20:23.451 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:20:23.680 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:20:26.504 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:20:26.504 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090826504, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:20:26.505 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:20:26.509 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:20:26.685 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:20:26.691 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 16:20:26.698 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:20:26.756 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:20:29.764 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:20:29.779 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:20:29.797 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:20:32.852 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 17472 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:20:32.856 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:20:32.857 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 16:20:34.028 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:20:34.313 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 16:20:34.321 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:20:34.322 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:20:34.441 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:20:34.441 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1537 ms 
cloud-order-server 2023-03-06 16:20:34.852 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:20:35.721 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 18572 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:20:35.724 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:20:35.724 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:20:36.638 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:20:36.863 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:20:36.927 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:20:36.939 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:20:36.963 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:20:36.971 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:20:36.971 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:20:37.036 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:20:37.068 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:20:37.076 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:20:37.076 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1319 ms 
cloud-order-server 2023-03-06 16:20:37.172 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:20:37.173 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:20:37.430 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:20:37.431 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:20:37.702 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:20:37.720 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:20:37.735 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:20:37.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:20:37.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:20:37.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:20:37.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:20:37.736 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:20:37.737 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:20:37.950 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:20:37.960 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:20:37.963 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:20:37.968 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090837967 with initial instances count: 4 
cloud-order-server 2023-03-06 16:20:37.969 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:20:37.970 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090837970, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:20:37.972 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:20:37.990 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 16:20:37.991 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 16:20:38.003 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:20:38.387 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 6.484 seconds (JVM running for 7.813) 
cloud-order-server 2023-03-06 16:20:38.468 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:20:38.468 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:20:38.471 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-order-server 2023-03-06 16:20:38.913 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:20:38.943 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#2ee48610:0/SimpleConnection@90e58a9 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50387] 
cloud-order-server 2023-03-06 16:20:39.547 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:20:39.586 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:20:39.592 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:20:39.680 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:20:39.708 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:20:39.761 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:20:39.762 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:20:39.865 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:20:39.865 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:20:39.990 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:20:40.002 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:20:40.003 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:20:40.117 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:20:40.119 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:20:40.122 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:20:40.125 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090840124 with initial instances count: 4 
cloud-order-server 2023-03-06 16:20:40.126 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:20:40.127 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090840127, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:20:40.129 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:20:40.146 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:20:40.147 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:20:40.156 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:20:40.470 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.729 seconds (JVM running for 6.665) 
cloud-order-server 2023-03-06 16:20:40.740 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:20:40.742 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:20:40.742 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:20:40.744 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:20:40.777 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#630390b9:0/SimpleConnection@107fedd7 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50394] 
cloud-order-server 2023-03-06 16:21:33.642 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:21:33.642 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090893642, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:21:33.643 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:21:33.645 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:21:33.892 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:21:36.899 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:21:36.905 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:21:36.917 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:21:41.315 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:21:41.315 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090901315, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:21:41.316 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:21:41.333 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:21:41.877 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:21:42.462 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 8688 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:21:42.464 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:21:42.465 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:21:43.313 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:21:43.541 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:21:43.548 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:21:43.548 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:21:43.657 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:21:43.657 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1161 ms 
cloud-order-server 2023-03-06 16:21:43.915 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:21:44.878 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:21:44.883 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - deregister  status: 200 
cloud-order-server 2023-03-06 16:21:44.890 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:21:45.488 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:21:45.529 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:21:45.537 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:21:45.677 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:21:45.733 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:21:45.805 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:21:45.806 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:21:45.972 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:21:45.972 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:21:46.369 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:21:46.395 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:21:46.395 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:21:46.395 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:21:46.395 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:21:46.396 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:21:46.396 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:21:46.396 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:21:46.566 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:21:46.570 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:21:46.575 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:21:46.581 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090906580 with initial instances count: 6 
cloud-order-server 2023-03-06 16:21:46.583 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:21:46.583 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090906583, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:21:46.586 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:21:46.608 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:21:46.609 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:21:46.628 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:21:47.070 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.622 seconds (JVM running for 6.515) 
cloud-order-server 2023-03-06 16:21:47.593 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:21:47.594 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:21:47.595 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:21:47.597 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:21:47.633 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#36c2d629:0/SimpleConnection@29602e83 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50464] 
cloud-order-server 2023-03-06 16:21:48.848 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20268 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:21:48.851 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:21:48.851 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9001" 
cloud-order-server 2023-03-06 16:21:49.669 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:21:49.891 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9001 (http) 
cloud-order-server 2023-03-06 16:21:49.898 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:21:49.898 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:21:50.005 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:21:50.005 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1123 ms 
cloud-order-server 2023-03-06 16:21:50.271 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:21:51.798 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:21:51.837 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:21:51.843 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:21:51.928 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:21:51.953 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:21:52.003 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:21:52.004 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:21:52.102 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:21:52.102 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:21:52.226 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:21:52.238 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:21:52.238 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:21:52.239 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:21:52.239 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:21:52.239 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:21:52.239 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:21:52.239 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:21:52.346 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:21:52.348 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:21:52.351 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:21:52.355 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678090912354 with initial instances count: 6 
cloud-order-server 2023-03-06 16:21:52.356 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:21:52.357 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678090912357, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:21:52.359 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 16:21:52.379 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9001 (http) with context path '' 
cloud-order-server 2023-03-06 16:21:52.381 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9001 
cloud-order-server 2023-03-06 16:21:52.392 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 16:21:52.722 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.749 seconds (JVM running for 5.648) 
cloud-order-server 2023-03-06 16:21:53.152 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:21:53.152 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:21:53.153 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 16:21:53.522 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:21:53.550 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#2cd4e16a:0/SimpleConnection@1dec0f80 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 50476] 
cloud-order-server 2023-03-06 16:26:46.402 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:26:52.245 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:31:46.406 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:31:52.247 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:36:46.410 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:36:52.250 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:41:46.414 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:41:52.254 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:43:20.917 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:43:20.919 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092200919, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:43:20.919 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:43:20.923 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:43:21.156 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:43:24.159 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:43:24.166 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:43:24.176 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:43:29.598 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21068 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:43:29.601 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:43:29.601 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:43:30.430 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:43:30.658 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:43:30.665 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:43:30.665 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:43:30.761 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:43:30.762 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1127 ms 
cloud-order-server 2023-03-06 16:43:31.027 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:43:32.667 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:43:32.711 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:43:32.718 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:43:32.816 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:43:32.850 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:43:32.909 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:43:32.910 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:43:33.008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:43:33.008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:43:33.152 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:43:33.165 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:43:33.165 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:43:33.166 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:43:33.166 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:43:33.166 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:43:33.166 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:43:33.166 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:43:33.292 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:43:33.294 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:43:33.297 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:43:33.301 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678092213300 with initial instances count: 5 
cloud-order-server 2023-03-06 16:43:33.302 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:43:33.304 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092213304, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:43:33.306 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:43:33.323 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:43:33.324 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:43:33.337 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:43:33.655 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.918 seconds (JVM running for 5.823) 
cloud-order-server 2023-03-06 16:43:34.021 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21068 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:43:34.022 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:43:34.022 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:43:34.287 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:43:34.349 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:43:34.350 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:43:34.350 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:43:34.360 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:43:34.362 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:43:34.362 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:43:34.363 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 16:43:34.400 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:43:34.400 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 377 ms 
cloud-order-server 2023-03-06 16:43:34.409 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6690b9fa:0/SimpleConnection@31a55bb6 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 51222] 
cloud-order-server 2023-03-06 16:43:34.489 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:43:34.491 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:43:34.493 INFO org.apache.juli.logging.DirectJDKLog.log Stopping service [Tomcat] 
cloud-order-server 2023-03-06 16:43:34.519 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
cloud-order-server 2023-03-06 16:43:34.549 ERROR org.springframework.boot.SpringApplication.reportFailure Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.4.jar:2.6.4]
	at com.jojo.OrderServerApplication.main(OrderServerApplication.java:25) [classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:264) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:221) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:427) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:938) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:155) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:108) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:164) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.get(FeignClientFactoryBean.java:344) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.feign(FeignClientFactoryBean.java:123) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:413) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:402) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.lambda$registerFeignClient$0(FeignClientsRegistrar.java:235) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.16.jar:5.3.16]
	... 19 common frames omitted
Caused by: javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_221]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_221]
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:129) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.16.jar:5.3.16]
	... 53 common frames omitted
cloud-order-server 2023-03-06 16:44:24.806 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:44:24.806 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092264806, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:44:24.806 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:44:24.812 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:44:25.053 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:44:28.057 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:44:28.061 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:44:28.069 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:44:32.012 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21184 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:44:32.015 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:44:32.016 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:44:32.906 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:44:33.201 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:44:33.212 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:44:33.213 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:44:33.322 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:44:33.322 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1263 ms 
cloud-order-server 2023-03-06 16:44:33.647 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:44:35.287 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:44:35.327 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:44:35.333 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:44:35.417 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:44:35.445 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:44:35.501 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:44:35.501 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:44:35.600 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:44:35.600 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:44:35.718 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:44:35.731 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:44:35.841 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:44:35.845 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:44:35.847 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:44:35.850 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678092275849 with initial instances count: 5 
cloud-order-server 2023-03-06 16:44:35.852 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:44:35.853 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092275853, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:44:35.854 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:44:35.871 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:44:35.872 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:44:35.884 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:44:36.179 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.032 seconds (JVM running for 6.217) 
cloud-order-server 2023-03-06 16:44:36.541 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21184 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:44:36.542 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:44:36.542 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:44:36.677 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:44:36.680 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:44:36.680 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:44:36.682 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:44:36.725 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6c8dbf56:0/SimpleConnection@1649dc70 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 51269] 
cloud-order-server 2023-03-06 16:44:36.819 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:44:36.854 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:44:36.855 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:44:36.855 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:44:36.879 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:44:36.879 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 336 ms 
cloud-order-server 2023-03-06 16:44:36.934 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:44:36.935 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:44:36.937 INFO org.apache.juli.logging.DirectJDKLog.log Stopping service [Tomcat] 
cloud-order-server 2023-03-06 16:44:36.954 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
cloud-order-server 2023-03-06 16:44:36.970 ERROR org.springframework.boot.SpringApplication.reportFailure Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.4.jar:2.6.4]
	at com.jojo.OrderServerApplication.main(OrderServerApplication.java:25) [classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:264) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:221) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:427) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:938) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:155) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:108) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:164) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.get(FeignClientFactoryBean.java:344) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.feign(FeignClientFactoryBean.java:123) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:413) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:402) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.lambda$registerFeignClient$0(FeignClientsRegistrar.java:235) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.16.jar:5.3.16]
	... 19 common frames omitted
Caused by: javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_221]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_221]
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:129) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.16.jar:5.3.16]
	... 53 common frames omitted
cloud-order-server 2023-03-06 16:46:52.257 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:49:35.736 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:51:09.906 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:51:09.906 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092669906, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:51:09.906 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:51:09.914 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:51:10.143 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:51:13.148 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:51:13.154 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:51:13.165 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:51:18.468 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 7960 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:51:18.470 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:51:18.470 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:51:19.304 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:51:19.584 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:51:19.591 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:51:19.591 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:51:19.687 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:51:19.687 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1186 ms 
cloud-order-server 2023-03-06 16:51:19.955 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:51:21.531 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:51:21.569 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:51:21.575 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:51:21.663 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:51:21.695 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:51:21.750 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:51:21.750 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:51:21.859 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:51:21.860 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:51:21.982 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:51:21.995 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:51:21.996 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:51:21.996 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:51:21.996 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:51:21.996 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:51:21.996 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:51:21.997 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:51:22.111 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:51:22.114 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:51:22.116 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:51:22.119 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678092682118 with initial instances count: 6 
cloud-order-server 2023-03-06 16:51:22.120 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:51:22.120 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678092682120, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:51:22.122 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:51:22.137 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:51:22.138 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:51:22.148 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:51:22.454 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.876 seconds (JVM running for 5.905) 
cloud-order-server 2023-03-06 16:51:23.263 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:51:23.265 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:51:23.265 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:51:23.267 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 16:51:23.294 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#493b01ef:0/SimpleConnection@18b4c371 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 51513] 
cloud-order-server 2023-03-06 16:51:52.259 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:56:22.001 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:56:52.262 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:57:06.707 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 16:57:06.708 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093026708, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 16:57:06.708 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:57:06.712 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:57:06.974 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 16:57:09.978 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 16:57:09.981 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 16:57:09.990 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 16:57:17.228 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20176 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:57:17.231 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:57:17.231 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:57:18.073 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:57:18.312 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:57:18.320 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:57:18.321 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:57:18.417 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:57:18.418 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1152 ms 
cloud-order-server 2023-03-06 16:57:18.678 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 16:57:20.222 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 16:57:20.259 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 16:57:20.264 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 16:57:20.349 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 16:57:20.375 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 16:57:20.424 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:57:20.425 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 16:57:20.522 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 16:57:20.522 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 16:57:20.642 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 16:57:20.654 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 16:57:20.654 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 16:57:20.654 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 16:57:20.655 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 16:57:20.655 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 16:57:20.655 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 16:57:20.656 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 16:57:20.770 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 16:57:20.773 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 16:57:20.775 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 16:57:20.779 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093040779 with initial instances count: 6 
cloud-order-server 2023-03-06 16:57:20.780 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 16:57:20.781 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093040781, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 16:57:20.783 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 16:57:20.803 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 16:57:20.804 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 16:57:20.815 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 16:57:21.134 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.792 seconds (JVM running for 5.662) 
cloud-order-server 2023-03-06 16:57:21.485 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20176 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 16:57:21.485 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 16:57:21.486 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 16:57:21.748 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 16:57:21.750 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:57:21.751 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 16:57:21.752 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 16:57:21.770 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 16:57:21.793 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6c8dbf56:0/SimpleConnection@31a2dd58 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 51836] 
cloud-order-server 2023-03-06 16:57:21.825 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 16:57:21.825 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 16:57:21.825 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 16:57:21.850 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 16:57:21.850 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 362 ms 
cloud-order-server 2023-03-06 16:57:21.904 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:57:21.905 WARN org.springframework.context.support.AbstractApplicationContext.refresh Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication 
cloud-order-server 2023-03-06 16:57:21.907 INFO org.apache.juli.logging.DirectJDKLog.log Stopping service [Tomcat] 
cloud-order-server 2023-03-06 16:57:21.924 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener.logMessage 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled. 
cloud-order-server 2023-03-06 16:57:21.940 ERROR org.springframework.boot.SpringApplication.reportFailure Application run failed 
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'remoteService'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:164) [spring-boot-2.6.4.jar:2.6.4]
	at com.jojo.OrderServerApplication.main(OrderServerApplication.java:27) [classes/:na]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:264) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:221) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:427) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:938) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586) ~[spring-context-5.3.16.jar:5.3.16]
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:155) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:108) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:164) ~[spring-cloud-context-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.get(FeignClientFactoryBean.java:344) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.feign(FeignClientFactoryBean.java:123) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:413) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:402) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.cloud.openfeign.FeignClientsRegistrar.lambda$registerFeignClient$0(FeignClientsRegistrar.java:235) ~[spring-cloud-openfeign-core-3.1.3.jar:3.1.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1389) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1309) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656) ~[spring-beans-5.3.16.jar:5.3.16]
	... 19 common frames omitted
Caused by: javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_221]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_221]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_221]
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:129) ~[spring-boot-2.6.4.jar:2.6.4]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.16.jar:5.3.16]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.16.jar:5.3.16]
	... 53 common frames omitted
cloud-order-server 2023-03-06 17:00:34.698 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:00:34.699 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093234699, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:00:34.699 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:00:34.702 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:00:34.959 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:00:37.963 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:00:37.970 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:00:37.980 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:00:43.079 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20328 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:00:43.081 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:00:43.083 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:00:43.931 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:00:44.185 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:00:44.193 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:00:44.193 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:00:44.294 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:00:44.295 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1183 ms 
cloud-order-server 2023-03-06 17:00:44.575 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:00:46.208 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:00:46.246 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:00:46.252 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:00:46.337 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:00:46.363 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:00:46.413 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:00:46.414 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:00:46.508 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:00:46.508 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:00:46.637 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:00:46.649 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:00:46.650 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:00:46.761 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:00:46.763 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:00:46.766 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:00:46.769 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093246768 with initial instances count: 6 
cloud-order-server 2023-03-06 17:00:46.770 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:00:46.771 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093246771, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:00:46.773 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:00:46.790 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:00:46.791 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:00:46.805 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:00:47.124 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.895 seconds (JVM running for 5.913) 
cloud-order-server 2023-03-06 17:00:47.805 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:00:47.806 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:00:47.807 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:00:47.808 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:00:47.837 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#7c37f145:0/SimpleConnection@7b51fce2 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 51965] 
cloud-order-server 2023-03-06 17:01:52.263 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:03:21.543 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:03:21.543 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093401543, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:03:21.543 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:03:21.547 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:03:21.795 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:03:24.801 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:03:24.808 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:03:24.818 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:03:30.397 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 22104 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:03:30.400 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:03:30.400 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:03:31.347 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:03:31.610 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:03:31.618 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:03:31.618 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:03:31.714 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:03:31.715 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1278 ms 
cloud-order-server 2023-03-06 17:03:32.006 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:03:33.671 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:03:33.708 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:03:33.715 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:03:33.807 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:03:33.833 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:03:33.887 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:03:33.888 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:03:34.009 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:03:34.009 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:03:34.148 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:03:34.159 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:03:34.160 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:03:34.160 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:03:34.160 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:03:34.160 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:03:34.160 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:03:34.161 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:03:34.278 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:03:34.280 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:03:34.283 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:03:34.287 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093414286 with initial instances count: 5 
cloud-order-server 2023-03-06 17:03:34.288 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:03:34.289 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093414289, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:03:34.291 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:03:34.309 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:03:34.310 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:03:34.322 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:03:34.626 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.21 seconds (JVM running for 6.235) 
cloud-order-server 2023-03-06 17:03:35.302 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:03:35.303 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:03:35.303 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:03:35.305 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:03:35.332 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#55fee662:0/SimpleConnection@6e829bc6 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 52204] 
cloud-order-server 2023-03-06 17:06:52.267 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:08:34.164 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:09:54.574 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:09:54.574 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093794574, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:09:54.574 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:09:54.580 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:09:54.883 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:09:57.889 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:09:57.896 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:09:57.907 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:10:02.839 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21036 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:10:02.842 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:10:02.842 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:10:03.681 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:10:03.906 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:10:03.913 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:10:03.913 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:10:04.008 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:10:04.008 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1136 ms 
cloud-order-server 2023-03-06 17:10:04.271 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:10:05.873 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:10:05.910 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:10:05.916 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:10:05.999 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:10:06.025 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:10:06.074 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:10:06.074 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:10:06.173 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:10:06.174 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:10:06.295 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:10:06.309 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:10:06.309 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:10:06.309 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:10:06.309 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:10:06.310 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:10:06.310 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:10:06.310 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:10:06.423 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:10:06.426 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:10:06.429 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:10:06.433 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093806432 with initial instances count: 5 
cloud-order-server 2023-03-06 17:10:06.434 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:10:06.434 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093806434, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:10:06.437 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:10:06.455 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:10:06.457 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:10:06.470 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:10:06.802 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.789 seconds (JVM running for 5.642) 
cloud-order-server 2023-03-06 17:10:07.136 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:10:07.138 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:10:07.138 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:10:07.140 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 17:10:07.173 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#54089484:0/SimpleConnection@1afc204e [delegate=amqp://guest@192.168.28.148:5672/, localPort= 52918] 
cloud-order-server 2023-03-06 17:11:04.244 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:11:04.244 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093864244, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:11:04.244 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:11:04.248 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:11:04.472 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:11:07.479 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-06 17:11:07.480 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:11:07.487 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:11:07.498 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:11:12.773 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 1784 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:11:12.775 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:11:12.776 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:11:13.613 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:11:13.853 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:11:13.862 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:11:13.862 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:11:13.957 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:11:13.958 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1151 ms 
cloud-order-server 2023-03-06 17:11:14.215 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:11:15.785 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:11:15.821 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:11:15.827 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:11:15.915 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:11:15.941 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:11:15.993 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:11:15.994 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:11:16.094 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:11:16.094 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:11:16.214 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:11:16.228 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:11:16.229 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:11:16.229 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:11:16.229 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:11:16.229 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:11:16.230 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:11:16.230 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:11:16.340 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:11:16.342 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:11:16.344 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:11:16.348 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093876347 with initial instances count: 6 
cloud-order-server 2023-03-06 17:11:16.349 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:11:16.349 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093876349, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:11:16.352 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:11:16.369 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:11:16.370 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:11:16.385 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:11:16.697 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.804 seconds (JVM running for 5.72) 
cloud-order-server 2023-03-06 17:11:16.958 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:11:16.959 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:11:16.960 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:11:16.961 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:11:16.994 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#55fee662:0/SimpleConnection@6b7a2b77 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 52970] 
cloud-order-server 2023-03-06 17:11:52.272 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:12:52.687 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:12:52.687 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093972687, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:12:52.687 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:12:52.692 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:12:52.938 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:12:55.946 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:12:55.953 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:12:55.963 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:13:00.995 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 17444 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:13:00.998 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:13:00.999 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:13:01.812 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:13:02.047 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:13:02.056 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:13:02.056 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:13:02.172 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:13:02.173 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1143 ms 
cloud-order-server 2023-03-06 17:13:02.436 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:13:03.993 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:13:04.030 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:13:04.036 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:13:04.126 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:13:04.152 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:13:04.205 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:13:04.205 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:13:04.299 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:13:04.299 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:13:04.420 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:13:04.431 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:13:04.431 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:13:04.431 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:13:04.431 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:13:04.431 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:13:04.432 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:13:04.432 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:13:04.545 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:13:04.548 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:13:04.550 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:13:04.553 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678093984552 with initial instances count: 5 
cloud-order-server 2023-03-06 17:13:04.554 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:13:04.555 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678093984555, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:13:04.557 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:13:04.572 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:13:04.573 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:13:04.585 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:13:04.897 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.755 seconds (JVM running for 5.617) 
cloud-order-server 2023-03-06 17:13:04.904 INFO com.jojo.OrderServerApplication.main method[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$bfae98ec.getRestTemplate()] 
cloud-order-server 2023-03-06 17:13:05.239 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:13:05.241 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:13:05.241 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:13:05.243 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:13:05.274 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#1823b9c4:0/SimpleConnection@39001148 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53048] 
cloud-order-server 2023-03-06 17:13:35.057 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:13:35.057 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678094015057, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:13:35.057 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:13:35.062 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:13:35.289 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:13:38.295 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:13:38.306 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:13:38.317 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:13:43.643 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 14632 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:13:43.646 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:13:43.646 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:13:44.466 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:13:44.696 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:13:44.703 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:13:44.703 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:13:44.798 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:13:44.798 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1121 ms 
cloud-order-server 2023-03-06 17:13:45.058 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:13:46.669 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:13:46.705 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:13:46.711 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:13:46.798 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:13:46.825 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:13:46.875 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:13:46.876 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:13:46.972 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:13:46.972 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:13:47.097 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:13:47.111 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:13:47.111 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:13:47.111 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:13:47.111 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:13:47.112 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:13:47.112 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:13:47.112 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:13:47.221 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:13:47.224 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:13:47.226 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:13:47.229 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678094027228 with initial instances count: 6 
cloud-order-server 2023-03-06 17:13:47.230 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:13:47.231 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678094027231, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:13:47.233 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:13:47.251 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:13:47.252 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:13:47.264 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:13:47.602 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.852 seconds (JVM running for 5.754) 
cloud-order-server 2023-03-06 17:13:47.610 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$fd3cd3d7.getRestTemplate()] 
cloud-order-server 2023-03-06 17:13:48.343 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:13:48.344 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:13:48.345 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:13:48.347 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 17:13:48.377 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#273a5a8a:0/SimpleConnection@4c5341c9 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 53098] 
cloud-order-server 2023-03-06 17:16:52.273 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:18:47.114 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:21:52.277 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:23:47.119 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:26:52.279 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:28:47.122 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:31:52.283 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:33:47.124 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:35:01.299 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:35:01.300 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095301300, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:35:01.300 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:35:01.305 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:35:01.579 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:35:04.580 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:35:04.584 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:35:04.594 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:35:11.027 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 9676 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:35:11.029 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:35:11.030 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:35:11.919 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:35:12.192 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:35:12.199 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:35:12.200 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:35:12.293 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:35:12.294 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1234 ms 
cloud-order-server 2023-03-06 17:35:12.560 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:35:14.100 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:35:14.137 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:35:14.143 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:35:14.229 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:35:14.255 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:35:14.305 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:35:14.306 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:35:14.400 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:35:14.401 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:35:14.528 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:35:14.540 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:35:14.540 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:35:14.540 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:35:14.541 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:35:14.541 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:35:14.541 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:35:14.541 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:35:14.658 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:35:14.661 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:35:14.663 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:35:14.666 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678095314665 with initial instances count: 6 
cloud-order-server 2023-03-06 17:35:14.667 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:35:14.668 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095314668, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:35:14.669 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:35:14.685 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:35:14.685 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:35:14.695 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:35:15.563 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.435 seconds (JVM running for 6.497) 
cloud-order-server 2023-03-06 17:35:15.574 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$cbd26240.getRestTemplate()] 
cloud-order-server 2023-03-06 17:35:16.027 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:35:16.028 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:35:16.028 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:35:16.030 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:35:16.070 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#36c2d629:0/SimpleConnection@138a6438 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54367] 
cloud-order-server 2023-03-06 17:35:25.668 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:35:25.668 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095325668, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:35:25.668 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:35:25.673 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:35:25.908 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:35:28.914 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:35:28.921 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:35:28.932 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:35:34.087 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21844 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:35:34.089 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:35:34.090 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:35:34.907 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:35:35.135 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:35:35.143 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:35:35.143 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:35:35.238 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:35:35.239 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1119 ms 
cloud-order-server 2023-03-06 17:35:35.500 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:35:37.045 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:35:37.081 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:35:37.087 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:35:37.172 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:35:37.198 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:35:37.247 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:35:37.248 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:35:37.337 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:35:37.338 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:35:37.460 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:35:37.473 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:35:37.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:35:37.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:35:37.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:35:37.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:35:37.474 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:35:37.475 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:35:37.581 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:35:37.583 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:35:37.585 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:35:37.589 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678095337588 with initial instances count: 5 
cloud-order-server 2023-03-06 17:35:37.590 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:35:37.591 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095337591, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:35:37.593 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:35:37.611 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:35:37.612 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:35:37.628 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:35:37.940 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.66 seconds (JVM running for 5.495) 
cloud-order-server 2023-03-06 17:35:37.946 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$4e285887.getRestTemplate()] 
cloud-order-server 2023-03-06 17:35:38.446 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:35:38.446 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:35:38.448 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:35:38.826 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:35:38.852 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#6c8dbf56:0/SimpleConnection@592ec83b [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54388] 
cloud-order-server 2023-03-06 17:36:52.286 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:37:02.898 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:37:02.899 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095422899, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:37:02.899 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:37:02.903 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:37:03.212 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:37:06.219 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:37:06.224 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:37:06.234 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:37:13.119 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 8244 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:37:13.121 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:37:13.122 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:37:14.055 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:37:14.332 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:37:14.341 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:37:14.342 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:37:14.465 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:37:14.465 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1312 ms 
cloud-order-server 2023-03-06 17:37:14.789 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:37:16.470 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:37:16.507 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:37:16.514 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:37:16.602 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:37:16.630 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:37:16.687 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:37:16.688 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:37:16.784 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:37:16.784 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:37:16.910 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:37:16.926 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:37:16.927 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:37:17.118 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:37:17.122 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:37:17.124 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:37:17.130 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678095437129 with initial instances count: 6 
cloud-order-server 2023-03-06 17:37:17.132 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:37:17.132 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095437132, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:37:17.134 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:37:17.154 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:37:17.156 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:37:17.170 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:37:17.487 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.303 seconds (JVM running for 6.268) 
cloud-order-server 2023-03-06 17:37:17.493 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$cbd26240.getRestTemplate()] 
cloud-order-server 2023-03-06 17:37:18.025 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:37:18.026 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:37:18.027 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:37:18.029 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 17:37:18.060 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#36c2d629:0/SimpleConnection@24298eae [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54470] 
cloud-order-server 2023-03-06 17:37:37.259 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:37:37.433 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 17:37:37.436 WARN org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer.getInstanceResponse No servers available for service: localhost 
cloud-order-server 2023-03-06 17:37:37.447 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Service Instance cannot be null.] with root cause 
java.lang.IllegalArgumentException: Service Instance cannot be null.
	at org.springframework.cloud.client.loadbalancer.LoadBalancerUriTools.reconstructURI(LoadBalancerUriTools.java:90)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.reconstructURI(BlockingLoadBalancerClient.java:161)
	at org.springframework.cloud.client.loadbalancer.ServiceRequestWrapper.getURI(ServiceRequestWrapper.java:42)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:98)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:55)
	at org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerRequest.apply(BlockingLoadBalancerRequest.java:32)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:114)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:141)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:91)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:361)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 17:39:22.940 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:39:22.941 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095562941, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:39:22.941 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:39:22.945 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:39:23.222 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:39:26.227 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:39:26.234 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:39:26.244 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:39:32.081 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 19664 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:39:32.083 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:39:32.084 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:39:33.073 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:39:33.318 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:39:33.324 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:39:33.325 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:39:33.415 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:39:33.416 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1285 ms 
cloud-order-server 2023-03-06 17:39:33.684 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:39:35.272 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:39:35.314 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:39:35.321 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:39:35.413 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:39:35.446 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:39:35.504 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:39:35.504 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:39:35.594 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:39:35.594 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:39:35.714 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:39:35.725 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:39:35.725 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:39:35.725 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:39:35.725 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:39:35.726 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:39:35.726 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:39:35.726 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:39:35.844 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:39:35.846 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:39:35.849 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:39:35.853 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678095575852 with initial instances count: 5 
cloud-order-server 2023-03-06 17:39:35.854 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:39:35.855 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095575855, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:39:35.857 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:39:35.877 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:39:35.878 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:39:35.891 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:39:36.208 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.079 seconds (JVM running for 6.006) 
cloud-order-server 2023-03-06 17:39:36.214 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$a915b91d.getRestTemplate()] 
cloud-order-server 2023-03-06 17:39:36.550 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:39:36.552 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:39:36.552 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:39:36.554 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 17:39:36.580 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#54089484:0/SimpleConnection@ec98462 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54558] 
cloud-order-server 2023-03-06 17:39:46.195 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:39:46.422 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:39:46.402+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"] with root cause 
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:39:46.402+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:361)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 17:40:57.688 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:40:57.748 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:40:57.739+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"] with root cause 
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:40:57.739+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:361)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 17:41:52.290 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:44:35.730 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:44:40.804 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:44:40.804 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095880804, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:44:40.805 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:44:40.810 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:44:41.136 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:44:44.140 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:44:44.148 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:44:44.159 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:45:03.537 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 21088 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:45:03.542 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:45:03.542 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:45:04.629 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:45:05.026 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:45:05.035 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:45:05.035 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:45:05.134 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:45:05.135 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1538 ms 
cloud-order-server 2023-03-06 17:45:05.477 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:45:07.226 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:45:07.294 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:45:07.302 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:45:07.401 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:45:07.438 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:45:07.504 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:45:07.505 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:45:07.623 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:45:07.624 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:45:07.822 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:45:07.837 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:45:07.837 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:45:07.837 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:45:07.837 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:45:07.837 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:45:07.838 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:45:07.838 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:45:07.989 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:45:07.992 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:45:07.995 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:45:07.999 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678095907998 with initial instances count: 5 
cloud-order-server 2023-03-06 17:45:08.001 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:45:08.002 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678095908002, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:45:08.004 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:45:08.025 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:45:08.026 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:45:08.039 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:45:08.402 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.797 seconds (JVM running for 20.23) 
cloud-order-server 2023-03-06 17:45:08.409 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$5c06ae6a.getRestTemplate()] 
cloud-order-server 2023-03-06 17:45:08.869 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:45:08.871 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:45:08.871 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:45:08.874 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 17:45:08.911 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#104a287c:0/SimpleConnection@215fa348 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54777] 
cloud-order-server 2023-03-06 17:45:23.989 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:46:51.219 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:46:23.671+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"] with root cause 
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:46:23.671+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:361)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 17:46:52.294 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:46:59.004 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:50:24.156 WARN com.rabbitmq.client.impl.ForgivingExceptionHandler.log An unexpected connection driver error occurred (Exception message: Connection reset) 
cloud-order-server 2023-03-06 17:50:24.158 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:50:24.175 INFO com.netflix.discovery.DiscoveryClient.renew DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - Re-registering apps/CLOUD-ORDER-SERVER 
cloud-order-server 2023-03-06 17:50:24.175 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:50:24.175 ERROR org.apache.juli.logging.DirectJDKLog.log Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:50:24.170+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"] with root cause 
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "<Map><timestamp>2023-03-06T09:50:24.170+00:00</timestamp><status>404</status><error>Not Found</error><path>/payment/get/1</path></Map>"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.getForEntity(RestTemplate.java:361)
	at com.jojo.controller.OrderController.orderPayment(OrderController.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:359)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1735)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 17:50:24.184 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:50:24.205 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 17:50:24.206 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678096224206, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 17:50:24.206 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:50:24.214 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:50:24.646 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 17:50:27.649 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 17:50:27.656 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 17:50:27.667 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 17:50:33.168 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 18824 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 17:50:33.170 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 17:50:33.170 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 17:50:33.990 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 17:50:34.214 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 17:50:34.222 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 17:50:34.223 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 17:50:34.318 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 17:50:34.318 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1117 ms 
cloud-order-server 2023-03-06 17:50:34.585 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 17:50:36.114 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 17:50:36.152 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 17:50:36.158 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 17:50:36.242 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 17:50:36.267 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 17:50:36.315 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:50:36.316 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 17:50:36.411 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 17:50:36.412 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 17:50:36.538 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:50:36.549 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 17:50:36.550 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 17:50:36.550 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 17:50:36.550 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 17:50:36.550 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 17:50:36.550 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 17:50:36.551 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 17:50:36.682 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 17:50:36.684 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 17:50:36.686 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 17:50:36.690 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678096236689 with initial instances count: 5 
cloud-order-server 2023-03-06 17:50:36.691 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 17:50:36.692 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678096236692, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 17:50:36.694 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 17:50:36.714 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 17:50:36.715 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 17:50:36.723 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 17:50:37.032 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 4.743 seconds (JVM running for 5.603) 
cloud-order-server 2023-03-06 17:50:37.042 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$cbd26240.getRestTemplate()] 
cloud-order-server 2023-03-06 17:50:37.844 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 17:50:37.846 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:50:37.846 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 17:50:37.847 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 1 ms 
cloud-order-server 2023-03-06 17:50:37.873 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#36c2d629:0/SimpleConnection@255dcd06 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 55002] 
cloud-order-server 2023-03-06 17:51:35.835 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:51:35.983 INFO com.jojo.controller.OrderController.orderPayment result:CommonResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 17:51:52.295 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:54:07.850 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:54:07.870 INFO com.jojo.controller.OrderController.orderPayment result:CommonResult(code=500, message=success, data={id=1, serial=sdijhfwueiosefhu}) 
cloud-order-server 2023-03-06 17:54:58.108 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:54:58.119 INFO com.jojo.controller.OrderController.orderPayment result:CommonResult(code=500, message=success, data={id=2, serial=sjeghueirjghuei}) 
cloud-order-server 2023-03-06 17:55:09.193 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 17:55:09.215 INFO com.jojo.controller.OrderController.orderPayment result:CommonResult(code=500, message=success, data={id=2, serial=sjeghueirjghuei}) 
cloud-order-server 2023-03-06 17:55:36.553 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 17:56:52.296 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:00:36.554 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:01:52.299 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:05:36.556 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:06:52.301 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:10:36.560 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:11:52.304 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:15:36.564 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:16:52.319 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:20:36.567 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:21:52.324 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:25:36.569 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:26:52.329 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:30:36.573 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:31:52.332 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:35:36.576 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:36:52.335 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:40:36.579 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:41:52.338 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:45:36.582 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:46:52.343 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:50:36.584 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:51:52.346 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:55:36.587 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 18:56:52.349 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:00:33.353 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:01:49.115 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:05:33.357 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:06:49.119 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:10:33.361 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:11:49.123 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:15:33.370 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:16:49.126 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:20:33.374 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:21:49.130 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:25:33.379 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:26:49.134 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:30:33.381 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:31:49.136 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:35:03.047 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 19:35:03.047 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678102503047, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 19:35:03.048 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:35:03.050 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:35:03.343 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 19:35:06.347 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor shutting down, can't accept the task 
cloud-order-server 2023-03-06 19:35:06.348 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 19:35:06.355 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - deregister  status: 200 
cloud-order-server 2023-03-06 19:35:06.366 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 19:35:11.090 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting OrderServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 20628 (D:\workspace\cloud-service\cloud-order\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-order-server 2023-03-06 19:35:11.093 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-order-server 2023-03-06 19:35:11.094 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "9002" 
cloud-order-server 2023-03-06 19:35:12.344 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=bfda1dd3-5e49-3e77-baa4-0268892de363 
cloud-order-server 2023-03-06 19:35:12.618 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 9002 (http) 
cloud-order-server 2023-03-06 19:35:12.628 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-order-server 2023-03-06 19:35:12.628 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-order-server 2023-03-06 19:35:12.736 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-order-server 2023-03-06 19:35:12.736 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1585 ms 
cloud-order-server 2023-03-06 19:35:13.045 INFO org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget For 'cloud-payment-server' URL not provided. Will try picking an instance via load-balancing. 
cloud-order-server 2023-03-06 19:35:14.728 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-order-server 2023-03-06 19:35:14.773 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-order-server 2023-03-06 19:35:14.782 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-order-server 2023-03-06 19:35:14.893 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-order-server 2023-03-06 19:35:14.924 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-order-server 2023-03-06 19:35:14.985 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 19:35:14.985 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-order-server 2023-03-06 19:35:15.091 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-order-server 2023-03-06 19:35:15.091 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-order-server 2023-03-06 19:35:15.285 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-order-server 2023-03-06 19:35:15.301 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-order-server 2023-03-06 19:35:15.302 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-order-server 2023-03-06 19:35:15.445 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-order-server 2023-03-06 19:35:15.448 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-order-server 2023-03-06 19:35:15.451 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-order-server 2023-03-06 19:35:15.455 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678102515454 with initial instances count: 6 
cloud-order-server 2023-03-06 19:35:15.456 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-ORDER-SERVER with eureka with status UP 
cloud-order-server 2023-03-06 19:35:15.456 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678102515456, current=UP, previous=STARTING] 
cloud-order-server 2023-03-06 19:35:15.459 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:35:15.478 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 9002 (http) with context path '' 
cloud-order-server 2023-03-06 19:35:15.480 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 9002 
cloud-order-server 2023-03-06 19:35:15.495 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:35:15.808 INFO org.springframework.boot.StartupInfoLogger.logStarted Started OrderServerApplication in 5.937 seconds (JVM running for 7.283) 
cloud-order-server 2023-03-06 19:35:15.815 INFO com.jojo.OrderServerApplication.main >>>>>>method:[public final org.springframework.web.client.RestTemplate com.jojo.config.RestTemplateConfig$$EnhancerBySpringCGLIB$$2a4e5c49.getRestTemplate()] 
cloud-order-server 2023-03-06 19:35:16.475 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-order-server 2023-03-06 19:35:16.477 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 19:35:16.477 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-order-server 2023-03-06 19:35:16.479 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-order-server 2023-03-06 19:35:16.515 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#5844a2d1:0/SimpleConnection@41a8ad95 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 58602] 
cloud-order-server 2023-03-06 19:35:43.381 DEBUG com.jojo.controller.OrderController.orderPayment OrderController begin>>>>>>> 
cloud-order-server 2023-03-06 19:35:43.560 INFO com.jojo.controller.OrderController.orderPayment result:CommonResult(code=500, message=success, data={id=2, serial=sjeghueirjghuei}) 
cloud-order-server 2023-03-06 19:36:49.138 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:40:46.317 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:40:46.317 WARN com.rabbitmq.client.impl.ForgivingExceptionHandler.log An unexpected connection driver error occurred (Exception message: Connection reset) 
cloud-order-server 2023-03-06 19:40:46.321 INFO com.netflix.discovery.DiscoveryClient.renew DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - Re-registering apps/CLOUD-ORDER-SERVER 
cloud-order-server 2023-03-06 19:40:46.322 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:41:28.338 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:41:28.345 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:41:28.352 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:41:28.352 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:41:49.139 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:43:39.604 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:43:39.604 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:43:50.484 INFO com.netflix.discovery.DiscoveryClient.renew DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - Re-registering apps/CLOUD-ORDER-SERVER 
cloud-order-server 2023-03-06 19:43:50.484 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:44:12.806 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 19:44:37.389 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:44:37.389 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] stacktrace=javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805)
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._unwrapAndDeserialize(DefaultDeserializationContext.java:355)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:319)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103)
	... 26 more
 
cloud-order-server 2023-03-06 19:44:37.392 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] 
cloud-order-server 2023-03-06 19:46:10.382 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 19:46:10.382 INFO org.apache.http.impl.client.DefaultRequestDirector.tryExecute I/O exception (java.net.SocketException) caught when processing request to {}->http://eureka1:7001: Software caused connection abort: recv failed 
cloud-order-server 2023-03-06 19:46:10.383 INFO org.apache.http.impl.client.DefaultRequestDirector.tryExecute Retrying request to {}->http://eureka1:7001 
cloud-order-server 2023-03-06 19:46:10.383 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:46:10.384 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:46:10.389 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] stacktrace=javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805)
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._unwrapAndDeserialize(DefaultDeserializationContext.java:355)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:319)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103)
	... 27 more
 
cloud-order-server 2023-03-06 19:46:10.390 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] 
cloud-order-server 2023-03-06 19:46:10.391 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 
cloud-order-server 2023-03-06 19:46:10.392 INFO com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution succeeded on retry #1 
cloud-order-server 2023-03-06 19:46:49.140 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:49:42.327 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:49:42.327 WARN com.netflix.discovery.TimedSupervisorTask.run task supervisor timed out 
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 19:49:42.336 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] stacktrace=javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805)
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._unwrapAndDeserialize(DefaultDeserializationContext.java:355)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:319)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103)
	... 26 more
 
cloud-order-server 2023-03-06 19:49:42.337 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] 
cloud-order-server 2023-03-06 19:49:42.340 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] stacktrace=javax.ws.rs.WebApplicationException: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:110)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:634)
	at com.sun.jersey.api.client.ClientResponse.getEntity(ClientResponse.java:586)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:200)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18]
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:805)
	at com.netflix.discovery.converters.EurekaJacksonCodec$ApplicationsDeserializer.deserialize(EurekaJacksonCodec.java:791)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._unwrapAndDeserialize(DefaultDeserializationContext.java:355)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:319)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2051)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1427)
	at com.netflix.discovery.converters.EurekaJacksonCodec.readValue(EurekaJacksonCodec.java:213)
	at com.netflix.discovery.converters.wrappers.CodecWrappers$LegacyJacksonJson.decode(CodecWrappers.java:314)
	at com.netflix.discovery.provider.DiscoveryJerseyProvider.readFrom(DiscoveryJerseyProvider.java:103)
	... 27 more
 
cloud-order-server 2023-03-06 19:49:42.341 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: com.fasterxml.jackson.core.JsonParseException: processing aborted
 at [Source: (GZIPInputStream); line: 1, column: 18] 
cloud-order-server 2023-03-06 19:49:42.341 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
 
cloud-order-server 2023-03-06 19:51:10.387 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:51:49.142 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:56:10.390 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 19:56:49.145 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:01:10.392 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:01:49.148 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:06:10.395 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:06:49.151 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:11:10.397 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:11:49.153 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:16:10.401 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:16:49.154 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:21:10.404 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:21:49.158 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:26:10.406 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:26:49.160 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-order-server 2023-03-06 20:28:01.407 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 20:28:01.408 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678105681408, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 20:28:01.411 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001: registering service... 
cloud-order-server 2023-03-06 20:28:01.419 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - registration status: 204 
cloud-order-server 2023-03-06 20:28:01.430 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-ORDER-SERVER with eureka with status DOWN 
cloud-order-server 2023-03-06 20:28:01.431 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678105681431, current=DOWN, previous=UP] 
cloud-order-server 2023-03-06 20:28:01.433 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002: registering service... 
cloud-order-server 2023-03-06 20:28:01.439 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - registration status: 204 
cloud-order-server 2023-03-06 20:28:01.917 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 20:28:01.951 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-order-server 2023-03-06 20:28:04.920 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 20:28:04.955 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-order-server 2023-03-06 20:28:06.935 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-order-server 2023-03-06 20:28:06.935 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-06 20:28:06.975 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-order-server 2023-03-06 20:28:06.976 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-06 20:28:08.945 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-order-server 2023-03-06 20:28:08.946 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-06 20:28:08.947 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9002 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 20:28:08.958 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-order-server 2023-03-06 20:28:08.987 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-order-server 2023-03-06 20:28:08.988 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-order-server 2023-03-06 20:28:08.993 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-ORDER-SERVER/xiaoxin-air14:cloud-order-server:9001 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-order-server 2023-03-06 20:28:09.005 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
