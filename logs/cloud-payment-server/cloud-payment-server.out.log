cloud-payment-server 2023-03-06 10:46:56.130 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 3432 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 10:46:56.140 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 10:46:56.141 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8001" 
cloud-payment-server 2023-03-06 10:46:58.126 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 10:46:58.709 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8001 (http) 
cloud-payment-server 2023-03-06 10:46:58.724 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 10:46:58.725 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 10:46:58.987 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 10:46:58.987 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2779 ms 
cloud-payment-server 2023-03-06 10:46:59.631 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 10596 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 10:46:59.639 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 10:46:59.640 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8002" 
cloud-payment-server 2023-03-06 10:47:01.436 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 10:47:01.795 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8002 (http) 
cloud-payment-server 2023-03-06 10:47:01.804 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 10:47:01.805 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 10:47:01.951 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 10:47:01.951 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2236 ms 
cloud-payment-server 2023-03-06 10:47:03.249 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 10:47:03.430 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 10:47:03.463 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 10:47:03.753 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 10:47:03.812 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 10:47:03.984 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:47:03.986 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:47:04.148 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:47:04.149 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:47:04.393 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 10:47:04.420 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 10:47:04.420 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 10:47:04.421 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 10:47:04.421 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 10:47:04.421 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 10:47:04.421 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 10:47:04.422 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 10:47:04.652 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 10:47:04.657 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 10:47:04.663 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 10:47:04.671 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678070824669 with initial instances count: 2 
cloud-payment-server 2023-03-06 10:47:04.677 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 10:47:04.678 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678070824678, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 10:47:04.680 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 10:47:04.712 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8001 (http) with context path '' 
cloud-payment-server 2023-03-06 10:47:04.714 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8001 
cloud-payment-server 2023-03-06 10:47:04.736 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 10:47:05.642 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 10:47:05.726 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#5a49af50:0/SimpleConnection@a95cb11 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54167] 
cloud-payment-server 2023-03-06 10:47:05.886 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 10.854 seconds (JVM running for 11.832) 
cloud-payment-server 2023-03-06 10:47:06.393 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:47:06.393 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:47:06.397 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-payment-server 2023-03-06 10:47:06.538 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 10:47:06.696 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 10:47:06.767 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 10:47:07.182 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 10:47:07.250 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 10:47:07.412 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:47:07.413 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:47:07.678 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:47:07.679 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:47:07.901 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 10:47:08.233 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 10:47:08.265 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 10:47:08.266 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 10:47:08.267 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 10:47:08.267 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 10:47:08.270 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 10:47:08.271 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 10:47:08.272 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 10:47:08.535 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 10:47:08.542 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 10:47:08.546 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 10:47:08.552 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678070828550 with initial instances count: 2 
cloud-payment-server 2023-03-06 10:47:08.558 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 10:47:08.560 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678070828560, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 10:47:08.563 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 10:47:08.599 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8002 (http) with context path '' 
cloud-payment-server 2023-03-06 10:47:08.600 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8002 
cloud-payment-server 2023-03-06 10:47:08.609 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 10:47:09.109 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 10:47:09.156 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#2f74900b:0/SimpleConnection@608b35fa [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54187] 
cloud-payment-server 2023-03-06 10:47:09.234 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 11.13 seconds (JVM running for 12.413) 
cloud-payment-server 2023-03-06 10:47:10.037 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:47:10.038 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:47:10.042 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 4 ms 
cloud-payment-server 2023-03-06 10:47:10.087 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 10:50:18.042 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 10:50:18.043 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678071018043, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 10:50:18.043 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 10:50:18.047 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 10:50:18.049 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 10:50:18.661 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 10:50:18.893 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 10:50:18.897 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 10:50:18.899 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 10:50:21.358 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 10:50:21.358 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678071021358, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 10:50:21.358 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 10:50:21.363 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 10:50:21.364 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 10:50:21.904 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 10:50:21.916 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - deregister  status: 200 
cloud-payment-server 2023-03-06 10:50:21.937 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-payment-server 2023-03-06 10:50:22.304 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 10:50:22.592 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 10:50:22.596 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 10:50:22.601 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 10:50:25.606 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 10:50:25.615 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - deregister  status: 200 
cloud-payment-server 2023-03-06 10:50:25.631 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-payment-server 2023-03-06 10:50:28.973 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 8284 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 10:50:28.975 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 10:50:28.976 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8002" 
cloud-payment-server 2023-03-06 10:50:30.581 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 10:50:30.970 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8002 (http) 
cloud-payment-server 2023-03-06 10:50:30.979 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 10:50:30.979 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 10:50:31.163 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 10:50:31.163 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 2142 ms 
cloud-payment-server 2023-03-06 10:50:32.467 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 15852 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 10:50:32.469 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 10:50:32.470 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8001" 
cloud-payment-server 2023-03-06 10:50:33.516 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 10:50:33.863 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8001 (http) 
cloud-payment-server 2023-03-06 10:50:33.871 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 10:50:33.872 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 10:50:33.996 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 10:50:33.997 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1496 ms 
cloud-payment-server 2023-03-06 10:50:34.044 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 10:50:34.126 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 10:50:34.162 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 10:50:34.287 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 10:50:34.332 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 10:50:34.388 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:50:34.388 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:50:34.472 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:50:34.472 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:50:34.608 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 10:50:34.620 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 10:50:34.621 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 10:50:34.765 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 10:50:34.768 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 10:50:34.771 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 10:50:34.775 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678071034774 with initial instances count: 4 
cloud-payment-server 2023-03-06 10:50:34.777 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 10:50:34.778 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678071034778, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 10:50:34.780 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 10:50:34.804 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8002 (http) with context path '' 
cloud-payment-server 2023-03-06 10:50:34.805 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8002 
cloud-payment-server 2023-03-06 10:50:34.822 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 10:50:35.167 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 10:50:35.199 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#40d60f2:0/SimpleConnection@134c38 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54420] 
cloud-payment-server 2023-03-06 10:50:35.266 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 7.339 seconds (JVM running for 8.726) 
cloud-payment-server 2023-03-06 10:50:35.948 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:50:35.949 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:50:35.951 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 2 ms 
cloud-payment-server 2023-03-06 10:50:36.009 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 10:50:36.299 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 10:50:36.375 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 10:50:36.390 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 10:50:36.540 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 10:50:36.592 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 10:50:36.642 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:50:36.642 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 10:50:36.723 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:50:36.724 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 10:50:37.540 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 10:50:37.561 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 10:50:37.562 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 10:50:37.562 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 10:50:37.562 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 10:50:37.563 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 10:50:37.563 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 10:50:37.563 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 10:50:37.753 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 10:50:37.757 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 10:50:37.762 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 10:50:37.770 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678071037768 with initial instances count: 4 
cloud-payment-server 2023-03-06 10:50:37.773 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 10:50:37.774 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678071037774, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 10:50:37.777 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 10:50:37.803 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8001 (http) with context path '' 
cloud-payment-server 2023-03-06 10:50:37.805 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8001 
cloud-payment-server 2023-03-06 10:50:37.818 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 10:50:38.194 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 10:50:38.225 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#31142d58:0/SimpleConnection@2bfc8558 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 54432] 
cloud-payment-server 2023-03-06 10:50:38.293 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 7.111 seconds (JVM running for 8.195) 
cloud-payment-server 2023-03-06 10:50:38.731 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:50:38.731 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 10:50:38.734 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-payment-server 2023-03-06 10:50:38.784 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 10:53:09.186 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 10:53:09.221 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 10:53:09.242 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 10:53:09.284 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 10:53:09.285 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 10:53:24.725 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 10:53:24.745 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 10:53:24.764 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 10:53:24.783 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 10:53:24.784 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 10:53:36.029 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 10:53:36.030 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 10:53:36.030 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 10:53:36.032 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 10:53:36.034 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 10:53:42.339 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 10:53:42.339 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 10:53:42.340 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 10:53:42.341 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 10:53:42.342 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 10:55:34.626 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 10:55:37.569 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:00:34.628 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:00:37.571 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:05:34.629 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:05:37.573 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:10:34.633 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:10:37.574 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:15:34.635 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:15:37.576 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:20:34.639 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:20:37.580 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:25:34.643 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:25:37.581 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:29:10.795 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:10.799 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:10.800 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:10.803 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:10.804 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:29:21.863 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:21.867 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:21.867 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:21.871 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:21.872 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:29:22.169 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:22.169 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:22.170 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:22.171 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:22.172 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:29:22.749 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:22.750 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:22.751 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:22.752 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:22.753 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:29:23.399 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:23.399 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:23.400 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:23.401 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:23.402 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:29:24.061 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 11:29:24.061 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 11:29:24.062 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 11:29:24.064 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 11:29:24.065 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 11:30:34.645 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:30:37.584 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:35:34.647 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:35:37.589 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:40:34.651 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:40:37.592 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:45:34.654 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:45:37.594 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:50:34.657 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:50:37.597 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:51:25.511 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 11:51:25.511 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074685511, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 11:51:25.511 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 11:51:25.517 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 11:51:25.518 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 11:51:25.833 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 11:51:26.104 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 11:51:26.107 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 11:51:26.109 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 11:51:28.596 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 11:51:28.596 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074688596, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 11:51:28.597 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 11:51:28.602 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 11:51:28.603 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 11:51:28.829 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 11:51:29.101 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 11:51:29.103 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 11:51:29.106 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 11:51:29.112 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 11:51:29.117 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - deregister  status: 200 
cloud-payment-server 2023-03-06 11:51:29.124 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-payment-server 2023-03-06 11:51:32.110 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 11:51:32.117 INFO com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - deregister  status: 200 
cloud-payment-server 2023-03-06 11:51:32.131 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-payment-server 2023-03-06 11:51:39.310 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 17296 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 11:51:39.314 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 11:51:39.316 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8001" 
cloud-payment-server 2023-03-06 11:51:40.795 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 11:51:41.204 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8001 (http) 
cloud-payment-server 2023-03-06 11:51:41.218 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 11:51:41.219 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 11:51:41.356 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 11:51:41.357 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1986 ms 
cloud-payment-server 2023-03-06 11:51:43.165 INFO org.springframework.boot.StartupInfoLogger.logStarting Starting PaymentServerApplication using Java 1.8.0_221 on xiaoxin-air14 with PID 19388 (D:\workspace\cloud-service\cloud-payment\target\classes started by lenovo in D:\workspace\cloud-service) 
cloud-payment-server 2023-03-06 11:51:43.168 DEBUG org.springframework.boot.StartupInfoLogger.logStarting Running with Spring Boot v2.6.4, Spring v5.3.16 
cloud-payment-server 2023-03-06 11:51:43.168 INFO org.springframework.boot.SpringApplication.logStartupProfileInfo The following 1 profile is active: "8002" 
cloud-payment-server 2023-03-06 11:51:44.354 INFO org.springframework.cloud.context.scope.GenericScope.setSerializationId BeanFactory id=92641927-c004-3422-9a6a-7cd7af4b1ec0 
cloud-payment-server 2023-03-06 11:51:44.631 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 11:51:44.692 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 11:51:44.707 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 11:51:44.716 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize Tomcat initialized with port(s): 8002 (http) 
cloud-payment-server 2023-03-06 11:51:44.724 INFO org.apache.juli.logging.DirectJDKLog.log Starting service [Tomcat] 
cloud-payment-server 2023-03-06 11:51:44.725 INFO org.apache.juli.logging.DirectJDKLog.log Starting Servlet engine: [Apache Tomcat/9.0.58] 
cloud-payment-server 2023-03-06 11:51:44.861 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 11:51:44.870 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring embedded WebApplicationContext 
cloud-payment-server 2023-03-06 11:51:44.870 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext Root WebApplicationContext: initialization completed in 1663 ms 
cloud-payment-server 2023-03-06 11:51:44.905 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 11:51:45.008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 11:51:45.008 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 11:51:45.310 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 11:51:45.310 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 11:51:45.467 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:51:45.486 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 11:51:45.486 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 11:51:45.486 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 11:51:45.487 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 11:51:45.487 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 11:51:45.487 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 11:51:45.487 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 11:51:45.646 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 11:51:45.650 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 11:51:45.653 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 11:51:45.658 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678074705657 with initial instances count: 5 
cloud-payment-server 2023-03-06 11:51:45.661 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 11:51:45.662 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074705662, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 11:51:45.664 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 11:51:45.686 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8001 (http) with context path '' 
cloud-payment-server 2023-03-06 11:51:45.687 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8001 
cloud-payment-server 2023-03-06 11:51:45.698 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 11:51:46.130 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 11:51:46.192 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#5f631ca0:0/SimpleConnection@30358dc7 [delegate=amqp://guest@192.168.28.148:5672/, localPort= 56887] 
cloud-payment-server 2023-03-06 11:51:46.280 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 8.017 seconds (JVM running for 9.039) 
cloud-payment-server 2023-03-06 11:51:48.522 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 11:51:48.523 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 11:51:48.528 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 5 ms 
cloud-payment-server 2023-03-06 11:51:48.625 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 11:51:50.381 INFO org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs Eureka HTTP Client uses Jersey 
cloud-payment-server 2023-03-06 11:51:50.549 WARN org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.logWarning Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath. 
cloud-payment-server 2023-03-06 11:51:50.579 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init> Exposing 1 endpoint(s) beneath base path '/actuator' 
cloud-payment-server 2023-03-06 11:51:50.788 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create Setting initial instance status as: STARTING 
cloud-payment-server 2023-03-06 11:51:50.833 INFO com.netflix.discovery.DiscoveryClient.<init> Initializing Eureka in region us-east-1 
cloud-payment-server 2023-03-06 11:51:50.921 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON encoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 11:51:50.921 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using JSON decoding codec LegacyJacksonJson 
cloud-payment-server 2023-03-06 11:51:51.053 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML encoding codec XStreamXml 
cloud-payment-server 2023-03-06 11:51:51.054 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider.<init> Using XML decoding codec XStreamXml 
cloud-payment-server 2023-03-06 11:51:51.266 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:51:51.285 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Disable delta property : false 
cloud-payment-server 2023-03-06 11:51:51.286 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Single vip registry refresh property : null 
cloud-payment-server 2023-03-06 11:51:51.286 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Force full registry fetch : false 
cloud-payment-server 2023-03-06 11:51:51.286 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application is null : false 
cloud-payment-server 2023-03-06 11:51:51.286 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Registered Applications size is zero : true 
cloud-payment-server 2023-03-06 11:51:51.287 INFO com.netflix.discovery.DiscoveryClient.fetchRegistry Application version is -1: true 
cloud-payment-server 2023-03-06 11:51:51.287 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry Getting all instance registry info from the eureka server 
cloud-payment-server 2023-03-06 11:51:51.540 INFO com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry The response status is 200 
cloud-payment-server 2023-03-06 11:51:51.547 INFO com.netflix.discovery.DiscoveryClient.initScheduledTasks Starting heartbeat executor: renew interval is: 30 
cloud-payment-server 2023-03-06 11:51:51.552 INFO com.netflix.discovery.InstanceInfoReplicator.<init> InstanceInfoReplicator onDemand update allowed rate per min is 4 
cloud-payment-server 2023-03-06 11:51:51.559 INFO com.netflix.discovery.DiscoveryClient.<init> Discovery Client initialized at timestamp 1678074711558 with initial instances count: 5 
cloud-payment-server 2023-03-06 11:51:51.563 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register Registering application CLOUD-PAYMENT-SERVER with eureka with status UP 
cloud-payment-server 2023-03-06 11:51:51.564 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678074711564, current=UP, previous=STARTING] 
cloud-payment-server 2023-03-06 11:51:51.567 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 11:51:51.610 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start Tomcat started on port(s): 8002 (http) with context path '' 
cloud-payment-server 2023-03-06 11:51:51.612 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent Updating port to 8002 
cloud-payment-server 2023-03-06 11:51:51.629 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 11:51:52.218 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses Attempting to connect to: [192.168.28.148:5672] 
cloud-payment-server 2023-03-06 11:51:52.262 INFO org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection Created new connection: rabbitConnectionFactory#3b8ec001:0/SimpleConnection@77a2688d [delegate=amqp://guest@192.168.28.148:5672/, localPort= 56901] 
cloud-payment-server 2023-03-06 11:51:52.372 INFO org.springframework.boot.StartupInfoLogger.logStarted Started PaymentServerApplication in 10.742 seconds (JVM running for 11.867) 
cloud-payment-server 2023-03-06 11:51:52.944 INFO org.apache.juli.logging.DirectJDKLog.log Initializing Spring DispatcherServlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 11:51:52.945 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Initializing Servlet 'dispatcherServlet' 
cloud-payment-server 2023-03-06 11:51:52.948 INFO org.springframework.web.servlet.FrameworkServlet.initServletBean Completed initialization in 3 ms 
cloud-payment-server 2023-03-06 11:51:53.021 INFO com.alibaba.druid.pool.DruidDataSource.init {dataSource-1} inited 
cloud-payment-server 2023-03-06 11:56:45.492 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:56:51.289 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 11:57:19.932 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 11:57:19.957 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 11:57:19.968 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 11:57:19.982 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 11:57:41.738 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 11:57:41.738 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 11:57:41.751 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 11:57:41.752 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 12:01:45.496 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:01:51.292 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:06:45.500 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:06:51.296 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:11:45.504 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:11:51.299 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:16:45.506 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:16:51.303 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:21:45.508 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:21:51.305 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:26:45.513 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:26:51.310 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:31:45.515 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:31:51.314 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:36:45.517 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:36:51.316 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:41:45.521 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:41:51.318 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:46:45.522 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:46:51.320 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:51:45.525 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:51:51.324 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:56:45.530 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 12:56:51.327 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:01:45.534 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:01:51.329 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:06:45.537 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:06:51.334 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:11:45.538 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:11:51.334 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:16:45.542 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:16:51.339 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:21:45.547 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:21:51.341 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:26:45.550 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:26:51.343 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:31:45.553 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:31:51.346 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:36:45.558 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:36:51.348 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:41:45.560 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:41:51.351 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:46:45.564 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:46:51.353 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:51:45.566 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:51:51.354 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:56:45.569 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 13:56:51.358 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:01:45.571 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:01:51.360 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:06:45.574 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:06:51.363 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:11:45.578 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:11:51.365 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:16:45.581 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:16:51.369 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:21:45.582 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:21:51.374 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:26:45.584 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:26:51.378 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:31:45.588 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:31:51.382 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:36:45.591 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:36:51.386 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:41:45.593 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:41:51.388 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:46:45.595 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:46:51.391 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:51:45.596 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:51:51.393 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:56:45.599 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 14:56:51.396 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:01:45.602 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:01:51.398 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:06:45.605 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:06:51.402 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:11:45.609 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:11:51.404 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:16:45.611 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:16:51.409 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:21:45.613 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:21:51.411 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:26:45.615 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:26:51.414 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:31:45.617 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:31:51.417 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:36:45.619 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:36:51.420 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:41:45.621 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:41:51.422 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:46:45.624 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:46:51.424 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:51:45.628 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:51:51.428 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:56:45.630 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 15:56:51.433 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:01:45.631 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:01:51.435 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:06:45.632 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:06:51.439 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:11:45.637 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:11:51.441 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:12:18.757 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:12:18.758 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:12:18.772 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:12:18.773 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:12:21.748 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:12:21.749 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:12:21.752 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:12:21.752 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:13:44.575 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:13:44.576 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:13:44.577 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:13:44.578 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:13:45.303 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:13:45.304 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:13:45.306 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:13:45.307 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:16:45.639 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:16:51.442 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:21:45.642 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:21:51.446 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:22:27.416 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:22:27.435 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:22:27.443 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:22:27.453 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:22:35.329 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 16:22:35.329 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 16:22:35.331 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 16:22:35.332 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 16:26:45.651 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:26:51.450 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:31:45.656 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:31:51.452 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:36:45.658 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:36:51.454 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:41:45.662 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:41:51.456 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:46:45.667 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:46:51.462 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:51:45.669 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:51:51.463 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:56:45.671 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 16:56:51.465 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:01:45.673 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:01:51.468 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:06:45.677 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:06:51.471 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:11:45.679 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:11:51.474 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:16:45.687 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:16:51.479 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:21:45.690 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:21:51.485 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:26:45.693 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:26:51.486 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:31:45.695 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:31:51.490 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:36:45.698 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:36:51.492 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:37:37.376 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:37:37.382 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:37:37.383 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:37:37.395 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:37:37.396 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:39:46.326 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:39:46.337 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:39:46.339 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:39:46.356 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:39:46.357 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:40:57.693 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:40:57.705 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:40:57.705 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:40:57.707 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:40:57.707 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:41:45.714 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:41:51.495 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:45:24.124 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:45:24.130 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:45:24.130 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:45:24.131 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:45:24.132 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:46:45.716 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:46:51.498 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:46:59.010 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:46:59.018 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:46:59.019 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:46:59.020 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:46:59.020 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:51:35.950 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:51:35.957 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:51:35.957 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:51:35.959 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:51:35.959 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:51:45.721 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:51:51.500 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:54:07.856 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:54:07.865 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:54:07.865 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 1(Long) 
cloud-payment-server 2023-03-06 17:54:07.867 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:54:07.868 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:54:58.113 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:54:58.113 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:54:58.114 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 2(Long) 
cloud-payment-server 2023-03-06 17:54:58.115 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:54:58.116 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:55:09.203 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 17:55:09.210 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 17:55:09.211 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 2(Long) 
cloud-payment-server 2023-03-06 17:55:09.212 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 17:55:09.213 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 17:56:45.724 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 17:56:51.501 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:01:45.727 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:01:51.517 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:06:45.728 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:06:51.521 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:11:45.730 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:11:51.526 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:16:45.734 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:16:51.532 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:21:45.738 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:21:51.536 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:26:45.739 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:26:51.540 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:31:45.741 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:31:51.545 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:36:45.744 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:36:51.549 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:41:45.748 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:41:51.552 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:46:45.752 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:46:51.554 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:51:45.757 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:51:51.558 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:56:45.760 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 18:56:51.560 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:01:42.528 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:01:48.327 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:06:42.531 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:06:48.329 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:11:42.534 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:11:48.331 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:16:42.539 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:16:48.334 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:21:42.541 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:21:48.335 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:26:42.544 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:26:48.338 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:31:42.546 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:31:48.342 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:35:43.531 DEBUG com.jojo.controller.PaymentController.payment PaymentController begin>>>>>>> 
cloud-payment-server 2023-03-06 19:35:43.534 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: select * from payment where id = ? 
cloud-payment-server 2023-03-06 19:35:43.536 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: 2(Long) 
cloud-payment-server 2023-03-06 19:35:43.538 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==      Total: 1 
cloud-payment-server 2023-03-06 19:35:43.538 INFO com.jojo.controller.PaymentController.payment payment 
cloud-payment-server 2023-03-06 19:36:42.548 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:36:48.345 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:41:42.550 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:41:48.346 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:46:42.559 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:46:48.348 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:46:49.782 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==>  Preparing: insert into payment(serial) values (?) 
cloud-payment-server 2023-03-06 19:46:49.783 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug ==> Parameters: null 
cloud-payment-server 2023-03-06 19:46:49.798 DEBUG org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug <==    Updates: 1 
cloud-payment-server 2023-03-06 19:46:49.799 INFO com.jojo.controller.PaymentController.count 总条数:1 
cloud-payment-server 2023-03-06 19:51:42.561 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:51:48.351 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:56:42.565 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 19:56:48.353 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:01:42.571 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:01:48.355 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:06:42.574 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:06:48.357 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:11:42.577 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:11:48.361 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:16:42.578 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:16:48.364 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:21:42.582 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:21:48.365 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:26:42.584 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:26:48.366 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints Resolving eureka endpoints via configuration 
cloud-payment-server 2023-03-06 20:28:01.336 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 20:28:01.336 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678105681336, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 20:28:01.337 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001: registering service... 
cloud-payment-server 2023-03-06 20:28:01.341 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - registration status: 204 
cloud-payment-server 2023-03-06 20:28:01.370 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 20:28:01.377 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister Unregistering application CLOUD-PAYMENT-SERVER with eureka with status DOWN 
cloud-payment-server 2023-03-06 20:28:01.378 INFO com.netflix.discovery.DiscoveryClient$3.notify Saw local status change event StatusChangeEvent [timestamp=1678105681378, current=DOWN, previous=UP] 
cloud-payment-server 2023-03-06 20:28:01.379 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002: registering service... 
cloud-payment-server 2023-03-06 20:28:01.387 INFO com.netflix.discovery.DiscoveryClient.register DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - registration status: 204 
cloud-payment-server 2023-03-06 20:28:01.415 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Waiting for workers to finish. 
cloud-payment-server 2023-03-06 20:28:01.507 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 20:28:01.964 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 20:28:01.966 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 20:28:01.970 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 20:28:02.212 INFO org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doShutdown Successfully waited for workers to finish. 
cloud-payment-server 2023-03-06 20:28:02.450 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closing ... 
cloud-payment-server 2023-03-06 20:28:02.451 INFO com.alibaba.druid.pool.DruidDataSource.close {dataSource-1} closed 
cloud-payment-server 2023-03-06 20:28:02.455 INFO com.netflix.discovery.DiscoveryClient.shutdown Shutting down DiscoveryClient ... 
cloud-payment-server 2023-03-06 20:28:04.974 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 20:28:05.458 INFO com.netflix.discovery.DiscoveryClient.unregister Unregistering ... 
cloud-payment-server 2023-03-06 20:28:06.995 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-payment-server 2023-03-06 20:28:06.995 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-payment-server 2023-03-06 20:28:07.481 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/} exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 more
 
cloud-payment-server 2023-03-06 20:28:07.482 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-payment-server 2023-03-06 20:28:09.024 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-payment-server 2023-03-06 20:28:09.025 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-payment-server 2023-03-06 20:28:09.030 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8002 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-payment-server 2023-03-06 20:28:09.043 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
cloud-payment-server 2023-03-06 20:28:09.487 INFO com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://eureka1:7001/eureka/}, exception=java.net.ConnectException: Connection refused: connect stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 47 more
 
cloud-payment-server 2023-03-06 20:28:09.488 WARN com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute Request execution failed with message: java.net.ConnectException: Connection refused: connect 
cloud-payment-server 2023-03-06 20:28:09.493 ERROR com.netflix.discovery.DiscoveryClient.unregister DiscoveryClient_CLOUD-PAYMENT-SERVER/xiaoxin-air14:cloud-payment-server:8001 - de-registration failedCannot execute request on any known server 
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.lang.Thread.run(Thread.java:748)
cloud-payment-server 2023-03-06 20:28:09.503 INFO com.netflix.discovery.DiscoveryClient.shutdown Completed shut down of DiscoveryClient 
